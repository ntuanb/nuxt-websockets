{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap","webpack:///external \"vue\"","webpack:///external \"ufo\"","webpack:///external \"debug\"","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/engine.io-parser/lib/index.js","webpack:///external \"component-emitter\"","webpack:///external \"vuex\"","webpack:///external \"tiny-emitter/instance\"","webpack:///./node_modules/engine.io-client/lib/util.js","webpack:///external \"vue-no-ssr\"","webpack:///./.nuxt/components/index.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/engine.io-client/lib/globalThis.js","webpack:///external \"parseqs\"","webpack:///./node_modules/socket.io-parser/dist/index.js","webpack:///external \"vue-client-only\"","webpack:///external \"vue-router\"","webpack:///./node_modules/socket.io-client/build/index.js","webpack:///./.nuxt/components/nuxt-error.vue?921e","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///./.nuxt/components/nuxt-loading.vue?da9d","webpack:///external \"parseuri\"","webpack:///./node_modules/socket.io-client/build/manager.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///external \"xmlhttprequest-ssl\"","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/engine.io-parser/lib/commons.js","webpack:///external \"yeast\"","webpack:///./node_modules/socket.io-client/build/socket.js","webpack:///./node_modules/socket.io-parser/dist/is-binary.js","webpack:///./node_modules/socket.io-client/build/on.js","webpack:///./node_modules/socket.io-client/build/typed-events.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-style-loader/lib/addStylesServer.js","webpack:///external \"node-fetch\"","webpack:///external \"vue-meta\"","webpack:///./node_modules/@nuxt/components/lib/installComponents.js","webpack:///./.nuxt/components/nuxt-error.vue?3778","webpack:///./.nuxt/components/nuxt-error.vue?5aed","webpack:///./.nuxt/components/nuxt-loading.vue?bdf6","webpack:///./.nuxt/components/nuxt-loading.vue?e14f","webpack:///./store/index.js","webpack:///./node_modules/socket.io-client/build/url.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/engine.io-parser/lib/encodePacket.js","webpack:///./node_modules/engine.io-parser/lib/decodePacket.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket-constructor.js","webpack:///external \"ws\"","webpack:///external \"engine.io-client/lib/util\"","webpack:///./node_modules/socket.io-parser/dist/binary.js","webpack:///external \"backo2\"","webpack:///./.nuxt/middleware.js","webpack:///./.nuxt/utils.js","webpack:///./.nuxt/mixins/fetch.server.js","webpack:///./.nuxt/router.scrollBehavior.js","webpack:///./.nuxt/router.js","webpack:///./.nuxt/components/nuxt-child.js","webpack:///./.nuxt/components/nuxt-error.vue?072c","webpack:///./.nuxt/components/nuxt-error.vue","webpack:///./.nuxt/components/nuxt-error.vue?c4e4","webpack:///./.nuxt/components/nuxt-error.vue?675f","webpack:///./.nuxt/components/nuxt.js","webpack:///./.nuxt/components/nuxt-loading.vue","webpack:///./.nuxt/components/nuxt-loading.vue?12ad","webpack:///./.nuxt/components/nuxt-loading.vue?f2ce","webpack:///./.nuxt/layouts/default.vue?d4fa","webpack:///./.nuxt/layouts/default.vue","webpack:///./.nuxt/App.js","webpack:///./.nuxt/store.js","webpack:///./.nuxt/components/plugin.js","webpack:///./.nuxt/nuxt-socket-io.js","webpack:///./.nuxt/index.js","webpack:///./.nuxt/components/nuxt-link.server.js","webpack:///./.nuxt/server.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded chunks\n \t// \"0\" means \"already loaded\"\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// require() chunk loading for javascript\n\n \t\t// \"0\" is the signal for \"already loaded\"\n \t\tif(installedChunks[chunkId] !== 0) {\n \t\t\tvar chunk = require(\"./\" + ({\"1\":\"pages/index\"}[chunkId]||chunkId) + \".js\");\n \t\t\tvar moreModules = chunk.modules, chunkIds = chunk.ids;\n \t\t\tfor(var moduleId in moreModules) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t\tfor(var i = 0; i < chunkIds.length; i++)\n \t\t\t\tinstalledChunks[chunkIds[i]] = 0;\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/_nuxt/\";\n\n \t// uncaught error handler for webpack runtime\n \t__webpack_require__.oe = function(err) {\n \t\tprocess.nextTick(function() {\n \t\t\tthrow err; // catch this error by using import().catch()\n \t\t});\n \t};\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 35);\n","module.exports = require(\"vue\");","module.exports = require(\"ufo\");","module.exports = require(\"debug\");","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n        injectStyles.call(\n          this,\n          (options.functional ? this.parent : this).$root.$options.shadowRoot\n        )\n      }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","const encodePacket = require(\"./encodePacket\");\nconst decodePacket = require(\"./decodePacket\");\n\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\n\nconst encodePayload = (packets, callback) => {\n  // some packets may be added to the array while encoding, so the initial length must be saved\n  const length = packets.length;\n  const encodedPackets = new Array(length);\n  let count = 0;\n\n  packets.forEach((packet, i) => {\n    // force base64 encoding for binary packets\n    encodePacket(packet, false, encodedPacket => {\n      encodedPackets[i] = encodedPacket;\n      if (++count === length) {\n        callback(encodedPackets.join(SEPARATOR));\n      }\n    });\n  });\n};\n\nconst decodePayload = (encodedPayload, binaryType) => {\n  const encodedPackets = encodedPayload.split(SEPARATOR);\n  const packets = [];\n  for (let i = 0; i < encodedPackets.length; i++) {\n    const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n    packets.push(decodedPacket);\n    if (decodedPacket.type === \"error\") {\n      break;\n    }\n  }\n  return packets;\n};\n\nmodule.exports = {\n  protocol: 4,\n  encodePacket,\n  encodePayload,\n  decodePacket,\n  decodePayload\n};\n","module.exports = require(\"component-emitter\");","module.exports = require(\"vuex\");","module.exports = require(\"tiny-emitter/instance\");","const globalThis = require(\"./globalThis\");\n\nmodule.exports.pick = (obj, ...attr) => {\n  return attr.reduce((acc, k) => {\n    if (obj.hasOwnProperty(k)) {\n      acc[k] = obj[k];\n    }\n    return acc;\n  }, {});\n};\n\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\n\nmodule.exports.installTimerFunctions = (obj, opts) => {\n  if (opts.useNativeTimers) {\n    obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n    obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n  } else {\n    obj.setTimeoutFn = setTimeout.bind(globalThis);\n    obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n  }\n};\n","module.exports = require(\"vue-no-ssr\");","\n\n// nuxt/nuxt.js#8607\nfunction wrapFunctional(options) {\n  if (!options || !options.functional) {\n    return options\n  }\n\n  const propKeys = Array.isArray(options.props) ? options.props : Object.keys(options.props || {})\n\n  return {\n    render(h) {\n      const attrs = {}\n      const props = {}\n\n      for (const key in this.$attrs) {\n        if (propKeys.includes(key)) {\n          props[key] = this.$attrs[key]\n        } else {\n          attrs[key] = this.$attrs[key]\n        }\n      }\n\n      return h(options, {\n        on: this.$listeners,\n        attrs,\n        props,\n        scopedSlots: this.$scopedSlots,\n      }, this.$slots.default)\n    }\n  }\n}\n","const parser = require(\"engine.io-parser\");\nconst Emitter = require(\"component-emitter\");\nconst { installTimerFunctions } = require(\"./util\");\nconst debug = require(\"debug\")(\"engine.io-client:transport\");\n\nclass Transport extends Emitter {\n  /**\n   * Transport abstract constructor.\n   *\n   * @param {Object} options.\n   * @api private\n   */\n  constructor(opts) {\n    super();\n    installTimerFunctions(this, opts);\n\n    this.opts = opts;\n    this.query = opts.query;\n    this.readyState = \"\";\n    this.socket = opts.socket;\n  }\n\n  /**\n   * Emits an error.\n   *\n   * @param {String} str\n   * @return {Transport} for chaining\n   * @api public\n   */\n  onError(msg, desc) {\n    const err = new Error(msg);\n    err.type = \"TransportError\";\n    err.description = desc;\n    this.emit(\"error\", err);\n    return this;\n  }\n\n  /**\n   * Opens the transport.\n   *\n   * @api public\n   */\n  open() {\n    if (\"closed\" === this.readyState || \"\" === this.readyState) {\n      this.readyState = \"opening\";\n      this.doOpen();\n    }\n\n    return this;\n  }\n\n  /**\n   * Closes the transport.\n   *\n   * @api private\n   */\n  close() {\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.doClose();\n      this.onClose();\n    }\n\n    return this;\n  }\n\n  /**\n   * Sends multiple packets.\n   *\n   * @param {Array} packets\n   * @api private\n   */\n  send(packets) {\n    if (\"open\" === this.readyState) {\n      this.write(packets);\n    } else {\n      // this might happen if the transport was silently closed in the beforeunload event handler\n      debug(\"transport is not open, discarding packets\");\n    }\n  }\n\n  /**\n   * Called upon open\n   *\n   * @api private\n   */\n  onOpen() {\n    this.readyState = \"open\";\n    this.writable = true;\n    this.emit(\"open\");\n  }\n\n  /**\n   * Called with data.\n   *\n   * @param {String} data\n   * @api private\n   */\n  onData(data) {\n    const packet = parser.decodePacket(data, this.socket.binaryType);\n    this.onPacket(packet);\n  }\n\n  /**\n   * Called with a decoded packet.\n   */\n  onPacket(packet) {\n    this.emit(\"packet\", packet);\n  }\n\n  /**\n   * Called upon close.\n   *\n   * @api private\n   */\n  onClose() {\n    this.readyState = \"closed\";\n    this.emit(\"close\");\n  }\n}\n\nmodule.exports = Transport;\n","module.exports = global;\n","module.exports = require(\"parseqs\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Decoder = exports.Encoder = exports.PacketType = exports.protocol = void 0;\nconst Emitter = require(\"component-emitter\");\nconst binary_1 = require(\"./binary\");\nconst is_binary_1 = require(\"./is-binary\");\nconst debug = require(\"debug\")(\"socket.io-parser\");\n/**\n * Protocol version.\n *\n * @public\n */\nexports.protocol = 5;\nvar PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType = exports.PacketType || (exports.PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nclass Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (is_binary_1.hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = binary_1.deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\nexports.Encoder = Encoder;\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nclass Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emit(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emit(\"decoded\", packet);\n            }\n        }\n        else if (is_binary_1.isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emit(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nexports.Decoder = Decoder;\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = binary_1.reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","module.exports = require(\"vue-client-only\");","module.exports = require(\"vue-router\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.io = exports.Socket = exports.Manager = exports.protocol = void 0;\nconst url_1 = require(\"./url\");\nconst manager_1 = require(\"./manager\");\nconst debug = require(\"debug\")(\"socket.io-client\");\n/**\n * Module exports.\n */\nmodule.exports = exports = lookup;\n/**\n * Managers cache.\n */\nconst cache = (exports.managers = {});\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = (0, url_1.url)(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new manager_1.Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new manager_1.Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\nexports.io = lookup;\n/**\n * Protocol version.\n *\n * @public\n */\nvar socket_io_parser_1 = require(\"socket.io-parser\");\nObject.defineProperty(exports, \"protocol\", { enumerable: true, get: function () { return socket_io_parser_1.protocol; } });\n/**\n * `connect`.\n *\n * @param {String} uri\n * @public\n */\nexports.connect = lookup;\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nvar manager_2 = require(\"./manager\");\nObject.defineProperty(exports, \"Manager\", { enumerable: true, get: function () { return manager_2.Manager; } });\nvar socket_1 = require(\"./socket\");\nObject.defineProperty(exports, \"Socket\", { enumerable: true, get: function () { return socket_1.Socket; } });\nexports.default = lookup;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-error.vue?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"6ac3c623\", content, true, context)\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-loading.vue?vue&type=style&index=0&lang=css&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add CSS to SSR context\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesServer.js\").default\nmodule.exports.__inject__ = function (context) {\n  add(\"7e56e4e3\", content, true, context)\n};","module.exports = require(\"parseuri\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Manager = void 0;\nconst eio = require(\"engine.io-client\");\nconst util_1 = require(\"engine.io-client/lib/util\");\nconst socket_1 = require(\"./socket\");\nconst parser = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst Backoff = require(\"backo2\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:manager\");\nclass Manager extends typed_events_1.StrictEventEmitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        (0, util_1.installTimerFunctions)(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = eio(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = (0, on_1.on)(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = (0, on_1.on)(socket, \"error\", (err) => {\n            debug(\"error\");\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                socket.close();\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push((0, on_1.on)(socket, \"ping\", this.onping.bind(this)), (0, on_1.on)(socket, \"data\", this.ondata.bind(this)), (0, on_1.on)(socket, \"error\", this.onerror.bind(this)), (0, on_1.on)(socket, \"close\", this.onclose.bind(this)), (0, on_1.on)(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new socket_1.Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        debug(\"onclose\");\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\nexports.Manager = Manager;\n","const XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst XHR = require(\"./polling-xhr\");\nconst JSONP = require(\"./polling-jsonp\");\nconst websocket = require(\"./websocket\");\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts) {\n  let xhr;\n  let xd = false;\n  let xs = false;\n  const jsonp = false !== opts.jsonp;\n\n  if (typeof location !== \"undefined\") {\n    const isSSL = \"https:\" === location.protocol;\n    let port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if (\"open\" in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error(\"JSONP disabled\");\n    return new JSONP(opts);\n  }\n}\n","module.exports = require(\"xmlhttprequest-ssl\");","const Transport = require(\"../transport\");\nconst parseqs = require(\"parseqs\");\nconst parser = require(\"engine.io-parser\");\nconst yeast = require(\"yeast\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling\");\n\nclass Polling extends Transport {\n  /**\n   * Transport name.\n   */\n  get name() {\n    return \"polling\";\n  }\n\n  /**\n   * Opens the socket (triggers polling). We write a PING message to determine\n   * when the transport is open.\n   *\n   * @api private\n   */\n  doOpen() {\n    this.poll();\n  }\n\n  /**\n   * Pauses polling.\n   *\n   * @param {Function} callback upon buffers are flushed and transport is paused\n   * @api private\n   */\n  pause(onPause) {\n    this.readyState = \"pausing\";\n\n    const pause = () => {\n      debug(\"paused\");\n      this.readyState = \"paused\";\n      onPause();\n    };\n\n    if (this.polling || !this.writable) {\n      let total = 0;\n\n      if (this.polling) {\n        debug(\"we are currently polling - waiting to pause\");\n        total++;\n        this.once(\"pollComplete\", function() {\n          debug(\"pre-pause polling complete\");\n          --total || pause();\n        });\n      }\n\n      if (!this.writable) {\n        debug(\"we are currently writing - waiting to pause\");\n        total++;\n        this.once(\"drain\", function() {\n          debug(\"pre-pause writing complete\");\n          --total || pause();\n        });\n      }\n    } else {\n      pause();\n    }\n  }\n\n  /**\n   * Starts polling cycle.\n   *\n   * @api public\n   */\n  poll() {\n    debug(\"polling\");\n    this.polling = true;\n    this.doPoll();\n    this.emit(\"poll\");\n  }\n\n  /**\n   * Overloads onData to detect payloads.\n   *\n   * @api private\n   */\n  onData(data) {\n    debug(\"polling got data %s\", data);\n    const callback = packet => {\n      // if its the first message we consider the transport open\n      if (\"opening\" === this.readyState && packet.type === \"open\") {\n        this.onOpen();\n      }\n\n      // if its a close packet, we close the ongoing requests\n      if (\"close\" === packet.type) {\n        this.onClose();\n        return false;\n      }\n\n      // otherwise bypass onData and handle the message\n      this.onPacket(packet);\n    };\n\n    // decode payload\n    parser.decodePayload(data, this.socket.binaryType).forEach(callback);\n\n    // if an event did not trigger closing\n    if (\"closed\" !== this.readyState) {\n      // if we got data we're not polling\n      this.polling = false;\n      this.emit(\"pollComplete\");\n\n      if (\"open\" === this.readyState) {\n        this.poll();\n      } else {\n        debug('ignoring poll - transport state \"%s\"', this.readyState);\n      }\n    }\n  }\n\n  /**\n   * For polling, send a close packet.\n   *\n   * @api private\n   */\n  doClose() {\n    const close = () => {\n      debug(\"writing close packet\");\n      this.write([{ type: \"close\" }]);\n    };\n\n    if (\"open\" === this.readyState) {\n      debug(\"transport open - closing\");\n      close();\n    } else {\n      // in case we're trying to close while\n      // handshaking is in progress (GH-164)\n      debug(\"transport not open - deferring close\");\n      this.once(\"open\", close);\n    }\n  }\n\n  /**\n   * Writes a packets payload.\n   *\n   * @param {Array} data packets\n   * @param {Function} drain callback\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    parser.encodePayload(packets, data => {\n      this.doWrite(data, () => {\n        this.writable = true;\n        this.emit(\"drain\");\n      });\n    });\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"https\" : \"http\";\n    let port = \"\";\n\n    // cache busting is forced\n    if (false !== this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    if (!this.supportsBinary && !query.sid) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n        (\"http\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n}\n\nmodule.exports = Polling;\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\n\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n  PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\n\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\n\nmodule.exports = {\n  PACKET_TYPES,\n  PACKET_TYPES_REVERSE,\n  ERROR_PACKET\n};\n","module.exports = require(\"yeast\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Socket = void 0;\nconst socket_io_parser_1 = require(\"socket.io-parser\");\nconst on_1 = require(\"./on\");\nconst typed_events_1 = require(\"./typed-events\");\nconst debug = require(\"debug\")(\"socket.io-client:socket\");\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nclass Socket extends typed_events_1.StrictEventEmitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            (0, on_1.on)(io, \"open\", this.onopen.bind(this)),\n            (0, on_1.on)(io, \"packet\", this.onpacket.bind(this)),\n            (0, on_1.on)(io, \"error\", this.onerror.bind(this)),\n            (0, on_1.on)(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: socket_io_parser_1.PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            debug(\"emitting packet with ack id %d\", this.ids);\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: socket_io_parser_1.PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case socket_io_parser_1.PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case socket_io_parser_1.PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case socket_io_parser_1.PacketType.ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case socket_io_parser_1.PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case socket_io_parser_1.PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: socket_io_parser_1.PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: socket_io_parser_1.PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\nexports.Socket = Socket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasBinary = exports.isBinary = void 0;\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nfunction isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexports.isBinary = isBinary;\nfunction hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.hasBinary = hasBinary;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.on = void 0;\nfunction on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\nexports.on = on;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StrictEventEmitter = void 0;\nconst Emitter = require(\"component-emitter\");\n/**\n * Strictly typed version of an `EventEmitter`. A `TypedEventEmitter` takes type\n * parameters for mappings of event names to event data types, and strictly\n * types method calls to the `EventEmitter` according to these event maps.\n *\n * @typeParam ListenEvents - `EventsMap` of user-defined events that can be\n * listened to with `on` or `once`\n * @typeParam EmitEvents - `EventsMap` of user-defined events that can be\n * emitted with `emit`\n * @typeParam ReservedEvents - `EventsMap` of reserved events, that can be\n * emitted by socket.io with `emitReserved`, and can be listened to with\n * `listen`.\n */\nclass StrictEventEmitter extends Emitter {\n    /**\n     * Adds the `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    on(ev, listener) {\n        super.on(ev, listener);\n        return this;\n    }\n    /**\n     * Adds a one-time `listener` function as an event listener for `ev`.\n     *\n     * @param ev Name of the event\n     * @param listener Callback function\n     */\n    once(ev, listener) {\n        super.once(ev, listener);\n        return this;\n    }\n    /**\n     * Emits an event.\n     *\n     * @param ev Name of the event\n     * @param args Values to send to listeners of this event\n     */\n    emit(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Emits a reserved event.\n     *\n     * This method is `protected`, so that only a class extending\n     * `StrictEventEmitter` can emit its own reserved events.\n     *\n     * @param ev Reserved event name\n     * @param args Arguments to emit along with the event\n     */\n    emitReserved(ev, ...args) {\n        super.emit(ev, ...args);\n        return this;\n    }\n    /**\n     * Returns the listeners listening to an event.\n     *\n     * @param event Event name\n     * @returns Array of listeners subscribed to `event`\n     */\n    listeners(event) {\n        return super.listeners(event);\n    }\n}\nexports.StrictEventEmitter = StrictEventEmitter;\n","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n","import listToStyles from './listToStyles'\n\nexport default function addStylesServer (parentId, list, isProduction, context) {\n  if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n    context = __VUE_SSR_CONTEXT__\n  }\n  if (context) {\n    if (!context.hasOwnProperty('styles')) {\n      Object.defineProperty(context, 'styles', {\n        enumerable: true,\n        get: function() {\n          return renderStyles(context._styles)\n        }\n      })\n      // expose renderStyles for vue-server-renderer (vuejs/#6353)\n      context._renderStyles = renderStyles\n    }\n\n    var styles = context._styles || (context._styles = {})\n    list = listToStyles(parentId, list)\n    if (isProduction) {\n      addStyleProd(styles, list)\n    } else {\n      addStyleDev(styles, list)\n    }\n  }\n}\n\n// In production, render as few style tags as possible.\n// (mostly because IE9 has a limit on number of style tags)\nfunction addStyleProd (styles, list) {\n  for (var i = 0; i < list.length; i++) {\n    var parts = list[i].parts\n    for (var j = 0; j < parts.length; j++) {\n      var part = parts[j]\n      // group style tags by media types.\n      var id = part.media || 'default'\n      var style = styles[id]\n      if (style) {\n        if (style.ids.indexOf(part.id) < 0) {\n          style.ids.push(part.id)\n          style.css += '\\n' + part.css\n        }\n      } else {\n        styles[id] = {\n          ids: [part.id],\n          css: part.css,\n          media: part.media\n        }\n      }\n    }\n  }\n}\n\n// In dev we use individual style tag for each module for hot-reload\n// and source maps.\nfunction addStyleDev (styles, list) {\n  for (var i = 0; i < list.length; i++) {\n    var parts = list[i].parts\n    for (var j = 0; j < parts.length; j++) {\n      var part = parts[j]\n      styles[part.id] = {\n        ids: [part.id],\n        css: part.css,\n        media: part.media\n      }\n    }\n  }\n}\n\nfunction renderStyles (styles) {\n  var css = ''\n  for (var key in styles) {\n    var style = styles[key]\n    css += '<style data-vue-ssr-id=\"' + style.ids.join(' ') + '\"' +\n        (style.media ? ( ' media=\"' + style.media + '\"' ) : '') + '>' +\n        style.css + '</style>'\n  }\n  return css\n}\n","module.exports = require(\"node-fetch\");","module.exports = require(\"vue-meta\");","global.installComponents = function (component, components) {\n  var options = typeof component.exports === 'function'\n    ? component.exports.extendOptions\n    : component.options\n\n  if (typeof component.exports === 'function') {\n    options.components = component.exports.options.components\n  }\n\n  options.components = options.components || {}\n\n  for (var i in components) {\n    options.components[i] = options.components[i] || components[i]\n  }\n\n\n  if (options.functional) {\n    provideFunctionalComponents(component, options.components)\n  }\n}\n\nvar functionalPatchKey = '_functionalComponents'\n\nfunction provideFunctionalComponents(component, components) {\n  if (component.exports[functionalPatchKey]) {\n    return\n  }\n  component.exports[functionalPatchKey] = true\n\n  var render = component.exports.render\n  component.exports.render = function (h, vm) {\n    return render(h, Object.assign({}, vm, {\n      _c: function (n, a, b) {\n        return vm._c(components[n] || n, a, b)\n      }\n    }))\n  }\n}\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-error.vue?vue&type=style&index=0&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".__nuxt-error-page{padding:1rem;background:#f7f8fb;color:#47494e;text-align:center;display:flex;justify-content:center;align-items:center;flex-direction:column;font-family:sans-serif;font-weight:100!important;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;-webkit-font-smoothing:antialiased;position:absolute;top:0;left:0;right:0;bottom:0}.__nuxt-error-page .error{max-width:450px}.__nuxt-error-page .title{font-size:1.5rem;margin-top:15px;color:#47494e;margin-bottom:8px}.__nuxt-error-page .description{color:#7f828b;line-height:21px;margin-bottom:10px}.__nuxt-error-page a{color:#7f828b!important;text-decoration:none}.__nuxt-error-page .logo{position:fixed;left:12px;bottom:12px}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","export * from \"-!../../node_modules/vue-style-loader/index.js??ref--3-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--3-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--3-oneOf-1-2!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-loading.vue?vue&type=style&index=0&lang=css&\"","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".nuxt-progress{position:fixed;top:0;left:0;right:0;height:2px;width:0;opacity:1;transition:width .1s,opacity .4s;background-color:#000;z-index:999999}.nuxt-progress.nuxt-progress-notransition{transition:none}.nuxt-progress-failed{background-color:red}\", \"\"]);\n// Exports\nmodule.exports = ___CSS_LOADER_EXPORT___;\n","export const state = () => ({}) // defined state (empty, but defined)\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.url = void 0;\nconst parseuri = require(\"parseuri\");\nconst debug = require(\"debug\")(\"socket.io-client:url\");\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nfunction url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\nexports.url = url;\n","const Socket = require(\"./socket\");\n\nmodule.exports = (uri, opts) => new Socket(uri, opts);\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nmodule.exports.Socket = Socket;\nmodule.exports.protocol = Socket.protocol; // this is an int\nmodule.exports.Transport = require(\"./transport\");\nmodule.exports.transports = require(\"./transports/index\");\nmodule.exports.parser = require(\"engine.io-parser\");\n","const transports = require(\"./transports/index\");\nconst Emitter = require(\"component-emitter\");\nconst debug = require(\"debug\")(\"engine.io-client:socket\");\nconst parser = require(\"engine.io-parser\");\nconst parseuri = require(\"parseuri\");\nconst parseqs = require(\"parseqs\");\nconst { installTimerFunctions } = require(\"./util\");\n\nclass Socket extends Emitter {\n  /**\n   * Socket constructor.\n   *\n   * @param {String|Object} uri or options\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts = {}) {\n    super();\n\n    if (uri && \"object\" === typeof uri) {\n      opts = uri;\n      uri = null;\n    }\n\n    if (uri) {\n      uri = parseuri(uri);\n      opts.hostname = uri.host;\n      opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n      opts.port = uri.port;\n      if (uri.query) opts.query = uri.query;\n    } else if (opts.host) {\n      opts.hostname = parseuri(opts.host).host;\n    }\n\n    installTimerFunctions(this, opts);\n\n    this.secure =\n      null != opts.secure\n        ? opts.secure\n        : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n\n    if (opts.hostname && !opts.port) {\n      // if no port is specified manually, use the protocol default\n      opts.port = this.secure ? \"443\" : \"80\";\n    }\n\n    this.hostname =\n      opts.hostname ||\n      (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n    this.port =\n      opts.port ||\n      (typeof location !== \"undefined\" && location.port\n        ? location.port\n        : this.secure\n        ? 443\n        : 80);\n\n    this.transports = opts.transports || [\"polling\", \"websocket\"];\n    this.readyState = \"\";\n    this.writeBuffer = [];\n    this.prevBufferLen = 0;\n\n    this.opts = Object.assign(\n      {\n        path: \"/engine.io\",\n        agent: false,\n        withCredentials: false,\n        upgrade: true,\n        jsonp: true,\n        timestampParam: \"t\",\n        rememberUpgrade: false,\n        rejectUnauthorized: true,\n        perMessageDeflate: {\n          threshold: 1024\n        },\n        transportOptions: {},\n        closeOnBeforeunload: true\n      },\n      opts\n    );\n\n    this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n\n    if (typeof this.opts.query === \"string\") {\n      this.opts.query = parseqs.decode(this.opts.query);\n    }\n\n    // set on handshake\n    this.id = null;\n    this.upgrades = null;\n    this.pingInterval = null;\n    this.pingTimeout = null;\n\n    // set on heartbeat\n    this.pingTimeoutTimer = null;\n\n    if (typeof addEventListener === \"function\") {\n      if (this.opts.closeOnBeforeunload) {\n        // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n        // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n        // closed/reloaded)\n        addEventListener(\n          \"beforeunload\",\n          () => {\n            if (this.transport) {\n              // silently close the transport\n              this.transport.removeAllListeners();\n              this.transport.close();\n            }\n          },\n          false\n        );\n      }\n      if (this.hostname !== \"localhost\") {\n        this.offlineEventListener = () => {\n          this.onClose(\"transport close\");\n        };\n        addEventListener(\"offline\", this.offlineEventListener, false);\n      }\n    }\n\n    this.open();\n  }\n\n  /**\n   * Creates transport of the given type.\n   *\n   * @param {String} transport name\n   * @return {Transport}\n   * @api private\n   */\n  createTransport(name) {\n    debug('creating transport \"%s\"', name);\n    const query = clone(this.opts.query);\n\n    // append engine.io protocol identifier\n    query.EIO = parser.protocol;\n\n    // transport name\n    query.transport = name;\n\n    // session id if we already have one\n    if (this.id) query.sid = this.id;\n\n    const opts = Object.assign(\n      {},\n      this.opts.transportOptions[name],\n      this.opts,\n      {\n        query,\n        socket: this,\n        hostname: this.hostname,\n        secure: this.secure,\n        port: this.port\n      }\n    );\n\n    debug(\"options: %j\", opts);\n\n    return new transports[name](opts);\n  }\n\n  /**\n   * Initializes transport to use and starts probe.\n   *\n   * @api private\n   */\n  open() {\n    let transport;\n    if (\n      this.opts.rememberUpgrade &&\n      Socket.priorWebsocketSuccess &&\n      this.transports.indexOf(\"websocket\") !== -1\n    ) {\n      transport = \"websocket\";\n    } else if (0 === this.transports.length) {\n      // Emit error on next tick so it can be listened to\n      this.setTimeoutFn(() => {\n        this.emit(\"error\", \"No transports available\");\n      }, 0);\n      return;\n    } else {\n      transport = this.transports[0];\n    }\n    this.readyState = \"opening\";\n\n    // Retry with the next transport if the transport is disabled (jsonp: false)\n    try {\n      transport = this.createTransport(transport);\n    } catch (e) {\n      debug(\"error while creating transport: %s\", e);\n      this.transports.shift();\n      this.open();\n      return;\n    }\n\n    transport.open();\n    this.setTransport(transport);\n  }\n\n  /**\n   * Sets the current transport. Disables the existing one (if any).\n   *\n   * @api private\n   */\n  setTransport(transport) {\n    debug(\"setting transport %s\", transport.name);\n\n    if (this.transport) {\n      debug(\"clearing existing transport %s\", this.transport.name);\n      this.transport.removeAllListeners();\n    }\n\n    // set up transport\n    this.transport = transport;\n\n    // set up transport listeners\n    transport\n      .on(\"drain\", this.onDrain.bind(this))\n      .on(\"packet\", this.onPacket.bind(this))\n      .on(\"error\", this.onError.bind(this))\n      .on(\"close\", () => {\n        this.onClose(\"transport close\");\n      });\n  }\n\n  /**\n   * Probes a transport.\n   *\n   * @param {String} transport name\n   * @api private\n   */\n  probe(name) {\n    debug('probing transport \"%s\"', name);\n    let transport = this.createTransport(name, { probe: 1 });\n    let failed = false;\n\n    Socket.priorWebsocketSuccess = false;\n\n    const onTransportOpen = () => {\n      if (failed) return;\n\n      debug('probe transport \"%s\" opened', name);\n      transport.send([{ type: \"ping\", data: \"probe\" }]);\n      transport.once(\"packet\", msg => {\n        if (failed) return;\n        if (\"pong\" === msg.type && \"probe\" === msg.data) {\n          debug('probe transport \"%s\" pong', name);\n          this.upgrading = true;\n          this.emit(\"upgrading\", transport);\n          if (!transport) return;\n          Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n\n          debug('pausing current transport \"%s\"', this.transport.name);\n          this.transport.pause(() => {\n            if (failed) return;\n            if (\"closed\" === this.readyState) return;\n            debug(\"changing transport and sending upgrade packet\");\n\n            cleanup();\n\n            this.setTransport(transport);\n            transport.send([{ type: \"upgrade\" }]);\n            this.emit(\"upgrade\", transport);\n            transport = null;\n            this.upgrading = false;\n            this.flush();\n          });\n        } else {\n          debug('probe transport \"%s\" failed', name);\n          const err = new Error(\"probe error\");\n          err.transport = transport.name;\n          this.emit(\"upgradeError\", err);\n        }\n      });\n    };\n\n    function freezeTransport() {\n      if (failed) return;\n\n      // Any callback called by transport should be ignored since now\n      failed = true;\n\n      cleanup();\n\n      transport.close();\n      transport = null;\n    }\n\n    // Handle any error that happens while probing\n    const onerror = err => {\n      const error = new Error(\"probe error: \" + err);\n      error.transport = transport.name;\n\n      freezeTransport();\n\n      debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n      this.emit(\"upgradeError\", error);\n    };\n\n    function onTransportClose() {\n      onerror(\"transport closed\");\n    }\n\n    // When the socket is closed while we're probing\n    function onclose() {\n      onerror(\"socket closed\");\n    }\n\n    // When the socket is upgraded while we're probing\n    function onupgrade(to) {\n      if (transport && to.name !== transport.name) {\n        debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n        freezeTransport();\n      }\n    }\n\n    // Remove all listeners on the transport and on self\n    const cleanup = () => {\n      transport.removeListener(\"open\", onTransportOpen);\n      transport.removeListener(\"error\", onerror);\n      transport.removeListener(\"close\", onTransportClose);\n      this.removeListener(\"close\", onclose);\n      this.removeListener(\"upgrading\", onupgrade);\n    };\n\n    transport.once(\"open\", onTransportOpen);\n    transport.once(\"error\", onerror);\n    transport.once(\"close\", onTransportClose);\n\n    this.once(\"close\", onclose);\n    this.once(\"upgrading\", onupgrade);\n\n    transport.open();\n  }\n\n  /**\n   * Called when connection is deemed open.\n   *\n   * @api public\n   */\n  onOpen() {\n    debug(\"socket open\");\n    this.readyState = \"open\";\n    Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n    this.emit(\"open\");\n    this.flush();\n\n    // we check for `readyState` in case an `open`\n    // listener already closed the socket\n    if (\n      \"open\" === this.readyState &&\n      this.opts.upgrade &&\n      this.transport.pause\n    ) {\n      debug(\"starting upgrade probes\");\n      let i = 0;\n      const l = this.upgrades.length;\n      for (; i < l; i++) {\n        this.probe(this.upgrades[i]);\n      }\n    }\n  }\n\n  /**\n   * Handles a packet.\n   *\n   * @api private\n   */\n  onPacket(packet) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n      this.emit(\"packet\", packet);\n\n      // Socket is live - any packet counts\n      this.emit(\"heartbeat\");\n\n      switch (packet.type) {\n        case \"open\":\n          this.onHandshake(JSON.parse(packet.data));\n          break;\n\n        case \"ping\":\n          this.resetPingTimeout();\n          this.sendPacket(\"pong\");\n          this.emit(\"ping\");\n          this.emit(\"pong\");\n          break;\n\n        case \"error\":\n          const err = new Error(\"server error\");\n          err.code = packet.data;\n          this.onError(err);\n          break;\n\n        case \"message\":\n          this.emit(\"data\", packet.data);\n          this.emit(\"message\", packet.data);\n          break;\n      }\n    } else {\n      debug('packet received with socket readyState \"%s\"', this.readyState);\n    }\n  }\n\n  /**\n   * Called upon handshake completion.\n   *\n   * @param {Object} handshake obj\n   * @api private\n   */\n  onHandshake(data) {\n    this.emit(\"handshake\", data);\n    this.id = data.sid;\n    this.transport.query.sid = data.sid;\n    this.upgrades = this.filterUpgrades(data.upgrades);\n    this.pingInterval = data.pingInterval;\n    this.pingTimeout = data.pingTimeout;\n    this.onOpen();\n    // In case open handler closes socket\n    if (\"closed\" === this.readyState) return;\n    this.resetPingTimeout();\n  }\n\n  /**\n   * Sets and resets ping timeout timer based on server pings.\n   *\n   * @api private\n   */\n  resetPingTimeout() {\n    this.clearTimeoutFn(this.pingTimeoutTimer);\n    this.pingTimeoutTimer = this.setTimeoutFn(() => {\n      this.onClose(\"ping timeout\");\n    }, this.pingInterval + this.pingTimeout);\n    if (this.opts.autoUnref) {\n      this.pingTimeoutTimer.unref();\n    }\n  }\n\n  /**\n   * Called on `drain` event\n   *\n   * @api private\n   */\n  onDrain() {\n    this.writeBuffer.splice(0, this.prevBufferLen);\n\n    // setting prevBufferLen = 0 is very important\n    // for example, when upgrading, upgrade packet is sent over,\n    // and a nonzero prevBufferLen could cause problems on `drain`\n    this.prevBufferLen = 0;\n\n    if (0 === this.writeBuffer.length) {\n      this.emit(\"drain\");\n    } else {\n      this.flush();\n    }\n  }\n\n  /**\n   * Flush write buffers.\n   *\n   * @api private\n   */\n  flush() {\n    if (\n      \"closed\" !== this.readyState &&\n      this.transport.writable &&\n      !this.upgrading &&\n      this.writeBuffer.length\n    ) {\n      debug(\"flushing %d packets in socket\", this.writeBuffer.length);\n      this.transport.send(this.writeBuffer);\n      // keep track of current length of writeBuffer\n      // splice writeBuffer and callbackBuffer on `drain`\n      this.prevBufferLen = this.writeBuffer.length;\n      this.emit(\"flush\");\n    }\n  }\n\n  /**\n   * Sends a message.\n   *\n   * @param {String} message.\n   * @param {Function} callback function.\n   * @param {Object} options.\n   * @return {Socket} for chaining.\n   * @api public\n   */\n  write(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  send(msg, options, fn) {\n    this.sendPacket(\"message\", msg, options, fn);\n    return this;\n  }\n\n  /**\n   * Sends a packet.\n   *\n   * @param {String} packet type.\n   * @param {String} data.\n   * @param {Object} options.\n   * @param {Function} callback function.\n   * @api private\n   */\n  sendPacket(type, data, options, fn) {\n    if (\"function\" === typeof data) {\n      fn = data;\n      data = undefined;\n    }\n\n    if (\"function\" === typeof options) {\n      fn = options;\n      options = null;\n    }\n\n    if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n      return;\n    }\n\n    options = options || {};\n    options.compress = false !== options.compress;\n\n    const packet = {\n      type: type,\n      data: data,\n      options: options\n    };\n    this.emit(\"packetCreate\", packet);\n    this.writeBuffer.push(packet);\n    if (fn) this.once(\"flush\", fn);\n    this.flush();\n  }\n\n  /**\n   * Closes the connection.\n   *\n   * @api private\n   */\n  close() {\n    const close = () => {\n      this.onClose(\"forced close\");\n      debug(\"socket closing - telling transport to close\");\n      this.transport.close();\n    };\n\n    const cleanupAndClose = () => {\n      this.removeListener(\"upgrade\", cleanupAndClose);\n      this.removeListener(\"upgradeError\", cleanupAndClose);\n      close();\n    };\n\n    const waitForUpgrade = () => {\n      // wait for upgrade to finish since we can't send packets while pausing a transport\n      this.once(\"upgrade\", cleanupAndClose);\n      this.once(\"upgradeError\", cleanupAndClose);\n    };\n\n    if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n      this.readyState = \"closing\";\n\n      if (this.writeBuffer.length) {\n        this.once(\"drain\", () => {\n          if (this.upgrading) {\n            waitForUpgrade();\n          } else {\n            close();\n          }\n        });\n      } else if (this.upgrading) {\n        waitForUpgrade();\n      } else {\n        close();\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Called upon transport error\n   *\n   * @api private\n   */\n  onError(err) {\n    debug(\"socket error %j\", err);\n    Socket.priorWebsocketSuccess = false;\n    this.emit(\"error\", err);\n    this.onClose(\"transport error\", err);\n  }\n\n  /**\n   * Called upon transport close.\n   *\n   * @api private\n   */\n  onClose(reason, desc) {\n    if (\n      \"opening\" === this.readyState ||\n      \"open\" === this.readyState ||\n      \"closing\" === this.readyState\n    ) {\n      debug('socket close with reason: \"%s\"', reason);\n\n      // clear timers\n      this.clearTimeoutFn(this.pingIntervalTimer);\n      this.clearTimeoutFn(this.pingTimeoutTimer);\n\n      // stop event from firing again for transport\n      this.transport.removeAllListeners(\"close\");\n\n      // ensure transport won't stay open\n      this.transport.close();\n\n      // ignore further transport communication\n      this.transport.removeAllListeners();\n\n      if (typeof removeEventListener === \"function\") {\n        removeEventListener(\"offline\", this.offlineEventListener, false);\n      }\n\n      // set ready state\n      this.readyState = \"closed\";\n\n      // clear session id\n      this.id = null;\n\n      // emit close event\n      this.emit(\"close\", reason, desc);\n\n      // clean buffers after, so users can still\n      // grab the buffers on `close` event\n      this.writeBuffer = [];\n      this.prevBufferLen = 0;\n    }\n  }\n\n  /**\n   * Filters upgrades, returning only those matching client transports.\n   *\n   * @param {Array} server upgrades\n   * @api private\n   *\n   */\n  filterUpgrades(upgrades) {\n    const filteredUpgrades = [];\n    let i = 0;\n    const j = upgrades.length;\n    for (; i < j; i++) {\n      if (~this.transports.indexOf(upgrades[i]))\n        filteredUpgrades.push(upgrades[i]);\n    }\n    return filteredUpgrades;\n  }\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\nfunction clone(obj) {\n  const o = {};\n  for (let i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\nmodule.exports = Socket;\n","/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick, installTimerFunctions } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    req.on(\"success\", fn);\n    req.on(\"error\", err => {\n      this.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    req.on(\"data\", this.onData.bind(this));\n    req.on(\"error\", err => {\n      this.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    installTimerFunctions(this, opts);\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\",\n      \"autoUnref\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = () => {\n          this.onLoad();\n        };\n        xhr.onerror = () => {\n          this.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = () => {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            this.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            this.setTimeoutFn(() => {\n              this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      this.setTimeoutFn(() => {\n        this.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n","const { PACKET_TYPES } = require(\"./commons\");\n\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n  if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n    const buffer = toBuffer(data);\n    return callback(encodeBuffer(buffer, supportsBinary));\n  }\n  // plain string\n  return callback(PACKET_TYPES[type] + (data || \"\"));\n};\n\nconst toBuffer = data => {\n  if (Buffer.isBuffer(data)) {\n    return data;\n  } else if (data instanceof ArrayBuffer) {\n    return Buffer.from(data);\n  } else {\n    return Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  }\n};\n\n// only 'message' packets can contain binary, so the type prefix is not needed\nconst encodeBuffer = (data, supportsBinary) => {\n  return supportsBinary ? data : \"b\" + data.toString(\"base64\");\n};\n\nmodule.exports = encodePacket;\n","const { PACKET_TYPES_REVERSE, ERROR_PACKET } = require(\"./commons\");\n\nconst decodePacket = (encodedPacket, binaryType) => {\n  if (typeof encodedPacket !== \"string\") {\n    return {\n      type: \"message\",\n      data: mapBinary(encodedPacket, binaryType)\n    };\n  }\n  const type = encodedPacket.charAt(0);\n  if (type === \"b\") {\n    const buffer = Buffer.from(encodedPacket.substring(1), \"base64\");\n    return {\n      type: \"message\",\n      data: mapBinary(buffer, binaryType)\n    };\n  }\n  if (!PACKET_TYPES_REVERSE[type]) {\n    return ERROR_PACKET;\n  }\n  return encodedPacket.length > 1\n    ? {\n        type: PACKET_TYPES_REVERSE[type],\n        data: encodedPacket.substring(1)\n      }\n    : {\n        type: PACKET_TYPES_REVERSE[type]\n      };\n};\n\nconst mapBinary = (data, binaryType) => {\n  const isBuffer = Buffer.isBuffer(data);\n  switch (binaryType) {\n    case \"arraybuffer\":\n      return isBuffer ? toArrayBuffer(data) : data;\n    case \"nodebuffer\":\n    default:\n      return data; // assuming the data is already a Buffer\n  }\n};\n\nconst toArrayBuffer = buffer => {\n  const arrayBuffer = new ArrayBuffer(buffer.length);\n  const view = new Uint8Array(arrayBuffer);\n  for (let i = 0; i < buffer.length; i++) {\n    view[i] = buffer[i];\n  }\n  return arrayBuffer;\n};\n\nmodule.exports = decodePacket;\n","const Polling = require(\"./polling\");\nconst globalThis = require(\"../globalThis\");\n\nconst rNewline = /\\n/g;\nconst rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nlet callbacks;\n\nclass JSONPPolling extends Polling {\n  /**\n   * JSONP Polling constructor.\n   *\n   * @param {Object} opts.\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.query = this.query || {};\n\n    // define global callbacks array if not present\n    // we do this here (lazily) to avoid unneeded global pollution\n    if (!callbacks) {\n      // we need to consider multiple engines in the same page\n      callbacks = globalThis.___eio = globalThis.___eio || [];\n    }\n\n    // callback identifier\n    this.index = callbacks.length;\n\n    // add callback to jsonp global\n    callbacks.push(this.onData.bind(this));\n\n    // append to query string\n    this.query.j = this.index;\n  }\n\n  /**\n   * JSONP only supports binary as base64 encoded strings\n   */\n  get supportsBinary() {\n    return false;\n  }\n\n  /**\n   * Closes the socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (this.script) {\n      // prevent spurious errors from being emitted when the window is unloaded\n      this.script.onerror = () => {};\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    if (this.form) {\n      this.form.parentNode.removeChild(this.form);\n      this.form = null;\n      this.iframe = null;\n    }\n\n    super.doClose();\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    const script = document.createElement(\"script\");\n\n    if (this.script) {\n      this.script.parentNode.removeChild(this.script);\n      this.script = null;\n    }\n\n    script.async = true;\n    script.src = this.uri();\n    script.onerror = e => {\n      this.onError(\"jsonp poll error\", e);\n    };\n\n    const insertAt = document.getElementsByTagName(\"script\")[0];\n    if (insertAt) {\n      insertAt.parentNode.insertBefore(script, insertAt);\n    } else {\n      (document.head || document.body).appendChild(script);\n    }\n    this.script = script;\n\n    const isUAgecko =\n      \"undefined\" !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n    if (isUAgecko) {\n      this.setTimeoutFn(function() {\n        const iframe = document.createElement(\"iframe\");\n        document.body.appendChild(iframe);\n        document.body.removeChild(iframe);\n      }, 100);\n    }\n  }\n\n  /**\n   * Writes with a hidden iframe.\n   *\n   * @param {String} data to send\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    let iframe;\n\n    if (!this.form) {\n      const form = document.createElement(\"form\");\n      const area = document.createElement(\"textarea\");\n      const id = (this.iframeId = \"eio_iframe_\" + this.index);\n\n      form.className = \"socketio\";\n      form.style.position = \"absolute\";\n      form.style.top = \"-1000px\";\n      form.style.left = \"-1000px\";\n      form.target = id;\n      form.method = \"POST\";\n      form.setAttribute(\"accept-charset\", \"utf-8\");\n      area.name = \"d\";\n      form.appendChild(area);\n      document.body.appendChild(form);\n\n      this.form = form;\n      this.area = area;\n    }\n\n    this.form.action = this.uri();\n\n    function complete() {\n      initIframe();\n      fn();\n    }\n\n    const initIframe = () => {\n      if (this.iframe) {\n        try {\n          this.form.removeChild(this.iframe);\n        } catch (e) {\n          this.onError(\"jsonp polling iframe removal error\", e);\n        }\n      }\n\n      try {\n        // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n        const html = '<iframe src=\"javascript:0\" name=\"' + this.iframeId + '\">';\n        iframe = document.createElement(html);\n      } catch (e) {\n        iframe = document.createElement(\"iframe\");\n        iframe.name = this.iframeId;\n        iframe.src = \"javascript:0\";\n      }\n\n      iframe.id = this.iframeId;\n\n      this.form.appendChild(iframe);\n      this.iframe = iframe;\n    };\n\n    initIframe();\n\n    // escape \\n to prevent it from being converted into \\r\\n by some UAs\n    // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n    data = data.replace(rEscapedNewline, \"\\\\\\n\");\n    this.area.value = data.replace(rNewline, \"\\\\n\");\n\n    try {\n      this.form.submit();\n    } catch (e) {}\n\n    if (this.iframe.attachEvent) {\n      this.iframe.onreadystatechange = () => {\n        if (this.iframe.readyState === \"complete\") {\n          complete();\n        }\n      };\n    } else {\n      this.iframe.onload = complete;\n    }\n  }\n}\n\nmodule.exports = JSONPPolling;\n","const Transport = require(\"../transport\");\nconst parser = require(\"engine.io-parser\");\nconst parseqs = require(\"parseqs\");\nconst yeast = require(\"yeast\");\nconst { pick } = require(\"../util\");\nconst {\n  WebSocket,\n  usingBrowserWebSocket,\n  defaultBinaryType,\n  nextTick\n} = require(\"./websocket-constructor\");\n\nconst debug = require(\"debug\")(\"engine.io-client:websocket\");\n\n// detect ReactNative environment\nconst isReactNative =\n  typeof navigator !== \"undefined\" &&\n  typeof navigator.product === \"string\" &&\n  navigator.product.toLowerCase() === \"reactnative\";\n\nclass WS extends Transport {\n  /**\n   * WebSocket transport constructor.\n   *\n   * @api {Object} connection options\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    this.supportsBinary = !opts.forceBase64;\n  }\n\n  /**\n   * Transport name.\n   *\n   * @api public\n   */\n  get name() {\n    return \"websocket\";\n  }\n\n  /**\n   * Opens socket.\n   *\n   * @api private\n   */\n  doOpen() {\n    if (!this.check()) {\n      // let probe timeout\n      return;\n    }\n\n    const uri = this.uri();\n    const protocols = this.opts.protocols;\n\n    // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n    const opts = isReactNative\n      ? {}\n      : pick(\n          this.opts,\n          \"agent\",\n          \"perMessageDeflate\",\n          \"pfx\",\n          \"key\",\n          \"passphrase\",\n          \"cert\",\n          \"ca\",\n          \"ciphers\",\n          \"rejectUnauthorized\",\n          \"localAddress\",\n          \"protocolVersion\",\n          \"origin\",\n          \"maxPayload\",\n          \"family\",\n          \"checkServerIdentity\"\n        );\n\n    if (this.opts.extraHeaders) {\n      opts.headers = this.opts.extraHeaders;\n    }\n\n    try {\n      this.ws =\n        usingBrowserWebSocket && !isReactNative\n          ? protocols\n            ? new WebSocket(uri, protocols)\n            : new WebSocket(uri)\n          : new WebSocket(uri, protocols, opts);\n    } catch (err) {\n      return this.emit(\"error\", err);\n    }\n\n    this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n\n    this.addEventListeners();\n  }\n\n  /**\n   * Adds event listeners to the socket\n   *\n   * @api private\n   */\n  addEventListeners() {\n    this.ws.onopen = () => {\n      if (this.opts.autoUnref) {\n        this.ws._socket.unref();\n      }\n      this.onOpen();\n    };\n    this.ws.onclose = this.onClose.bind(this);\n    this.ws.onmessage = ev => this.onData(ev.data);\n    this.ws.onerror = e => this.onError(\"websocket error\", e);\n  }\n\n  /**\n   * Writes data to socket.\n   *\n   * @param {Array} array of packets.\n   * @api private\n   */\n  write(packets) {\n    this.writable = false;\n\n    // encodePacket efficient as it uses WS framing\n    // no need for encodePayload\n    for (let i = 0; i < packets.length; i++) {\n      const packet = packets[i];\n      const lastPacket = i === packets.length - 1;\n\n      parser.encodePacket(packet, this.supportsBinary, data => {\n        // always create a new object (GH-437)\n        const opts = {};\n        if (!usingBrowserWebSocket) {\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (this.opts.perMessageDeflate) {\n            const len =\n              \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < this.opts.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            this.ws.send(data);\n          } else {\n            this.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug(\"websocket closed before onclose event\");\n        }\n\n        if (lastPacket) {\n          // fake drain\n          // defer to next tick to allow Socket to clear writeBuffer\n          nextTick(() => {\n            this.writable = true;\n            this.emit(\"drain\");\n          }, this.setTimeoutFn);\n        }\n      });\n    }\n  }\n\n  /**\n   * Called upon close\n   *\n   * @api private\n   */\n  onClose() {\n    Transport.prototype.onClose.call(this);\n  }\n\n  /**\n   * Closes socket.\n   *\n   * @api private\n   */\n  doClose() {\n    if (typeof this.ws !== \"undefined\") {\n      this.ws.close();\n      this.ws = null;\n    }\n  }\n\n  /**\n   * Generates uri for connection.\n   *\n   * @api private\n   */\n  uri() {\n    let query = this.query || {};\n    const schema = this.opts.secure ? \"wss\" : \"ws\";\n    let port = \"\";\n\n    // avoid port if default for schema\n    if (\n      this.opts.port &&\n      ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n        (\"ws\" === schema && Number(this.opts.port) !== 80))\n    ) {\n      port = \":\" + this.opts.port;\n    }\n\n    // append timestamp to URI\n    if (this.opts.timestampRequests) {\n      query[this.opts.timestampParam] = yeast();\n    }\n\n    // communicate binary support capabilities\n    if (!this.supportsBinary) {\n      query.b64 = 1;\n    }\n\n    query = parseqs.encode(query);\n\n    // prepend ? to query\n    if (query.length) {\n      query = \"?\" + query;\n    }\n\n    const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n    return (\n      schema +\n      \"://\" +\n      (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n      port +\n      this.opts.path +\n      query\n    );\n  }\n\n  /**\n   * Feature detection for WebSocket.\n   *\n   * @return {Boolean} whether this transport is available.\n   * @api public\n   */\n  check() {\n    return (\n      !!WebSocket &&\n      !(\"__initialize\" in WebSocket && this.name === WS.prototype.name)\n    );\n  }\n}\n\nmodule.exports = WS;\n","module.exports = {\n  WebSocket: require(\"ws\"),\n  usingBrowserWebSocket: false,\n  defaultBinaryType: \"nodebuffer\",\n  nextTick: process.nextTick\n};\n","module.exports = require(\"ws\");","module.exports = require(\"engine.io-client/lib/util\");","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.reconstructPacket = exports.deconstructPacket = void 0;\nconst is_binary_1 = require(\"./is-binary\");\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nfunction deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nexports.deconstructPacket = deconstructPacket;\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (is_binary_1.isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nfunction reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nexports.reconstructPacket = reconstructPacket;\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","module.exports = require(\"backo2\");","const middleware = {}\n\nexport default middleware\n","import Vue from 'vue'\nimport { isSamePath as _isSamePath, joinURL, normalizeURL, withQuery, withoutTrailingSlash } from 'ufo'\n\n// window.{{globals.loadedCallback}} hook\n// Useful for jsdom testing or plugins (https://github.com/tmpvar/jsdom#dealing-with-asynchronous-script-loading)\nif (process.client) {\n  window.onNuxtReadyCbs = []\n  window.onNuxtReady = (cb) => {\n    window.onNuxtReadyCbs.push(cb)\n  }\n}\n\nexport function createGetCounter (counterObject, defaultKey = '') {\n  return function getCounter (id = defaultKey) {\n    if (counterObject[id] === undefined) {\n      counterObject[id] = 0\n    }\n    return counterObject[id]++\n  }\n}\n\nexport function empty () {}\n\nexport function globalHandleError (error) {\n  if (Vue.config.errorHandler) {\n    Vue.config.errorHandler(error)\n  }\n}\n\nexport function interopDefault (promise) {\n  return promise.then(m => m.default || m)\n}\n\nexport function hasFetch(vm) {\n  return vm.$options && typeof vm.$options.fetch === 'function' && !vm.$options.fetch.length\n}\nexport function purifyData(data) {\n  if (process.env.NODE_ENV === 'production') {\n    return data\n  }\n\n  return Object.entries(data).filter(\n    ([key, value]) => {\n      const valid = !(value instanceof Function) && !(value instanceof Promise)\n      if (!valid) {\n        console.warn(`${key} is not able to be stringified. This will break in a production environment.`)\n      }\n      return valid\n    }\n    ).reduce((obj, [key, value]) => {\n      obj[key] = value\n      return obj\n    }, {})\n}\nexport function getChildrenComponentInstancesUsingFetch(vm, instances = []) {\n  const children = vm.$children || []\n  for (const child of children) {\n    if (child.$fetch) {\n      instances.push(child)\n      continue; // Don't get the children since it will reload the template\n    }\n    if (child.$children) {\n      getChildrenComponentInstancesUsingFetch(child, instances)\n    }\n  }\n  return instances\n}\n\nexport function applyAsyncData (Component, asyncData) {\n  if (\n    // For SSR, we once all this function without second param to just apply asyncData\n    // Prevent doing this for each SSR request\n    !asyncData && Component.options.__hasNuxtData\n  ) {\n    return\n  }\n\n  const ComponentData = Component.options._originDataFn || Component.options.data || function () { return {} }\n  Component.options._originDataFn = ComponentData\n\n  Component.options.data = function () {\n    const data = ComponentData.call(this, this)\n    if (this.$ssrContext) {\n      asyncData = this.$ssrContext.asyncData[Component.cid]\n    }\n    return { ...data, ...asyncData }\n  }\n\n  Component.options.__hasNuxtData = true\n\n  if (Component._Ctor && Component._Ctor.options) {\n    Component._Ctor.options.data = Component.options.data\n  }\n}\n\nexport function sanitizeComponent (Component) {\n  // If Component already sanitized\n  if (Component.options && Component._Ctor === Component) {\n    return Component\n  }\n  if (!Component.options) {\n    Component = Vue.extend(Component) // fix issue #6\n    Component._Ctor = Component\n  } else {\n    Component._Ctor = Component\n    Component.extendOptions = Component.options\n  }\n  // If no component name defined, set file path as name, (also fixes #5703)\n  if (!Component.options.name && Component.options.__file) {\n    Component.options.name = Component.options.__file\n  }\n  return Component\n}\n\nexport function getMatchedComponents (route, matches = false, prop = 'components') {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m[prop]).map((key) => {\n      matches && matches.push(index)\n      return m[prop][key]\n    })\n  }))\n}\n\nexport function getMatchedComponentsInstances (route, matches = false) {\n  return getMatchedComponents(route, matches, 'instances')\n}\n\nexport function flatMapComponents (route, fn) {\n  return Array.prototype.concat.apply([], route.matched.map((m, index) => {\n    return Object.keys(m.components).reduce((promises, key) => {\n      if (m.components[key]) {\n        promises.push(fn(m.components[key], m.instances[key], m, key, index))\n      } else {\n        delete m.components[key]\n      }\n      return promises\n    }, [])\n  }))\n}\n\nexport function resolveRouteComponents (route, fn) {\n  return Promise.all(\n    flatMapComponents(route, async (Component, instance, match, key) => {\n      // If component is a function, resolve it\n      if (typeof Component === 'function' && !Component.options) {\n        try {\n          Component = await Component()\n        } catch (error) {\n          // Handle webpack chunk loading errors\n          // This may be due to a new deployment or a network problem\n          if (\n            error &&\n            error.name === 'ChunkLoadError' &&\n            typeof window !== 'undefined' &&\n            window.sessionStorage\n          ) {\n            const timeNow = Date.now()\n            const previousReloadTime = parseInt(window.sessionStorage.getItem('nuxt-reload'))\n\n            // check for previous reload time not to reload infinitely\n            if (!previousReloadTime || previousReloadTime + 60000 < timeNow) {\n              window.sessionStorage.setItem('nuxt-reload', timeNow)\n              window.location.reload(true /* skip cache */)\n            }\n          }\n\n          throw error\n        }\n      }\n      match.components[key] = Component = sanitizeComponent(Component)\n      return typeof fn === 'function' ? fn(Component, instance, match, key) : Component\n    })\n  )\n}\n\nexport async function getRouteData (route) {\n  if (!route) {\n    return\n  }\n  // Make sure the components are resolved (code-splitting)\n  await resolveRouteComponents(route)\n  // Send back a copy of route with meta based on Component definition\n  return {\n    ...route,\n    meta: getMatchedComponents(route).map((Component, index) => {\n      return { ...Component.options.meta, ...(route.matched[index] || {}).meta }\n    })\n  }\n}\n\nexport async function setContext (app, context) {\n  // If context not defined, create it\n  if (!app.context) {\n    app.context = {\n      isStatic: process.static,\n      isDev: false,\n      isHMR: false,\n      app,\n      store: app.store,\n      payload: context.payload,\n      error: context.error,\n      base: app.router.options.base,\n      env: {}\n    }\n    // Only set once\n\n    if (context.req) {\n      app.context.req = context.req\n    }\n    if (context.res) {\n      app.context.res = context.res\n    }\n\n    if (context.ssrContext) {\n      app.context.ssrContext = context.ssrContext\n    }\n    app.context.redirect = (status, path, query) => {\n      if (!status) {\n        return\n      }\n      app.context._redirected = true\n      // if only 1 or 2 arguments: redirect('/') or redirect('/', { foo: 'bar' })\n      let pathType = typeof path\n      if (typeof status !== 'number' && (pathType === 'undefined' || pathType === 'object')) {\n        query = path || {}\n        path = status\n        pathType = typeof path\n        status = 302\n      }\n      if (pathType === 'object') {\n        path = app.router.resolve(path).route.fullPath\n      }\n      // \"/absolute/route\", \"./relative/route\" or \"../relative/route\"\n      if (/(^[.]{1,2}\\/)|(^\\/(?!\\/))/.test(path)) {\n        app.context.next({\n          path,\n          query,\n          status\n        })\n      } else {\n        path = withQuery(path, query)\n        if (process.server) {\n          app.context.next({\n            path,\n            status\n          })\n        }\n        if (process.client) {\n          // https://developer.mozilla.org/en-US/docs/Web/API/Location/replace\n          window.location.replace(path)\n\n          // Throw a redirect error\n          throw new Error('ERR_REDIRECT')\n        }\n      }\n    }\n    if (process.server) {\n      app.context.beforeNuxtRender = fn => context.beforeRenderFns.push(fn)\n    }\n    if (process.client) {\n      app.context.nuxtState = window.__NUXT__\n    }\n  }\n\n  // Dynamic keys\n  const [currentRouteData, fromRouteData] = await Promise.all([\n    getRouteData(context.route),\n    getRouteData(context.from)\n  ])\n\n  if (context.route) {\n    app.context.route = currentRouteData\n  }\n\n  if (context.from) {\n    app.context.from = fromRouteData\n  }\n\n  app.context.next = context.next\n  app.context._redirected = false\n  app.context._errored = false\n  app.context.isHMR = false\n  app.context.params = app.context.route.params || {}\n  app.context.query = app.context.route.query || {}\n}\n\nexport function middlewareSeries (promises, appContext) {\n  if (!promises.length || appContext._redirected || appContext._errored) {\n    return Promise.resolve()\n  }\n  return promisify(promises[0], appContext)\n    .then(() => {\n      return middlewareSeries(promises.slice(1), appContext)\n    })\n}\n\nexport function promisify (fn, context) {\n  let promise\n  if (fn.length === 2) {\n    // fn(context, callback)\n    promise = new Promise((resolve) => {\n      fn(context, function (err, data) {\n        if (err) {\n          context.error(err)\n        }\n        data = data || {}\n        resolve(data)\n      })\n    })\n  } else {\n    promise = fn(context)\n  }\n\n  if (promise && promise instanceof Promise && typeof promise.then === 'function') {\n    return promise\n  }\n  return Promise.resolve(promise)\n}\n\n// Imported from vue-router\nexport function getLocation (base, mode) {\n  if (mode === 'hash') {\n    return window.location.hash.replace(/^#\\//, '')\n  }\n\n  base = decodeURI(base).slice(0, -1) // consideration is base is normalized with trailing slash\n  let path = decodeURI(window.location.pathname)\n\n  if (base && path.startsWith(base)) {\n    path = path.slice(base.length)\n  }\n\n  const fullPath = (path || '/') + window.location.search + window.location.hash\n\n  return normalizeURL(fullPath)\n}\n\n// Imported from path-to-regexp\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nexport function compile (str, options) {\n  return tokensToFunction(parse(str, options), options)\n}\n\nexport function getQueryDiff (toQuery, fromQuery) {\n  const diff = {}\n  const queries = { ...toQuery, ...fromQuery }\n  for (const k in queries) {\n    if (String(toQuery[k]) !== String(fromQuery[k])) {\n      diff[k] = true\n    }\n  }\n  return diff\n}\n\nexport function normalizeError (err) {\n  let message\n  if (!(err.message || typeof err === 'string')) {\n    try {\n      message = JSON.stringify(err, null, 2)\n    } catch (e) {\n      message = `[${err.constructor.name}]`\n    }\n  } else {\n    message = err.message || err\n  }\n  return {\n    ...err,\n    message,\n    statusCode: (err.statusCode || err.status || (err.response && err.response.status) || 500)\n  }\n}\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nconst PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  const tokens = []\n  let key = 0\n  let index = 0\n  let path = ''\n  const defaultDelimiter = (options && options.delimiter) || '/'\n  let res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    const m = res[0]\n    const escaped = res[1]\n    const offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    const next = str[index]\n    const prefix = res[2]\n    const name = res[3]\n    const capture = res[4]\n    const group = res[5]\n    const modifier = res[6]\n    const asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    const partial = prefix != null && next != null && next !== prefix\n    const repeat = modifier === '+' || modifier === '*'\n    const optional = modifier === '?' || modifier === '*'\n    const delimiter = res[2] || defaultDelimiter\n    const pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter,\n      optional,\n      repeat,\n      partial,\n      asterisk: Boolean(asterisk),\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str, slashAllowed) {\n  const re = slashAllowed ? /[?#]/g : /[/?#]/g\n  return encodeURI(str).replace(re, (c) => {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURIComponentPretty(str, true)\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens, options) {\n  // Compile all the tokens into regexps.\n  const matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (let i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$', flags(options))\n    }\n  }\n\n  return function (obj, opts) {\n    let path = ''\n    const data = obj || {}\n    const options = opts || {}\n    const encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      const value = data[token.name || 'pathMatch']\n      let segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\nexport function addLifecycleHook(vm, hook, fn) {\n  if (!vm.$options[hook]) {\n    vm.$options[hook] = []\n  }\n  if (!vm.$options[hook].includes(fn)) {\n    vm.$options[hook].push(fn)\n  }\n}\n\nexport const urlJoin = joinURL\n\nexport const stripTrailingSlash = withoutTrailingSlash\n\nexport const isSamePath = _isSamePath\n\nexport function setScrollRestoration (newVal) {\n  try {\n    window.history.scrollRestoration = newVal;\n  } catch(e) {}\n}\n","import Vue from 'vue'\nimport { hasFetch, normalizeError, addLifecycleHook, purifyData, createGetCounter } from '../utils'\n\nasync function serverPrefetch() {\n  if (!this._fetchOnServer) {\n    return\n  }\n\n  // Call and await on $fetch\n  try {\n    await this.$options.fetch.call(this)\n  } catch (err) {\n    if (process.dev) {\n      console.error('Error in fetch():', err)\n    }\n    this.$fetchState.error = normalizeError(err)\n  }\n  this.$fetchState.pending = false\n\n  // Define an ssrKey for hydration\n  this._fetchKey = this._fetchKey || this.$ssrContext.fetchCounters['']++\n\n  // Add data-fetch-key on parent element of Component\n  const attrs = this.$vnode.data.attrs = this.$vnode.data.attrs || {}\n  attrs['data-fetch-key'] = this._fetchKey\n\n  // Add to ssrContext for window.__NUXT__.fetch\n\n  this.$ssrContext.nuxt.fetch[this._fetchKey] =\n    this.$fetchState.error ? { _error: this.$fetchState.error } : purifyData(this._data)\n}\n\nexport default {\n  created() {\n    if (!hasFetch(this)) {\n      return\n    }\n\n    if (typeof this.$options.fetchOnServer === 'function') {\n      this._fetchOnServer = this.$options.fetchOnServer.call(this) !== false\n    } else {\n      this._fetchOnServer = this.$options.fetchOnServer !== false\n    }\n\n    const defaultKey = this.$options._scopeId || this.$options.name || ''\n    const getCounter = createGetCounter(this.$ssrContext.fetchCounters, defaultKey)\n\n    if (typeof this.$options.fetchKey === 'function') {\n      this._fetchKey = this.$options.fetchKey.call(this, getCounter)\n    } else {\n      const key = 'string' === typeof this.$options.fetchKey ? this.$options.fetchKey : defaultKey\n      this._fetchKey = key ? key + ':' + getCounter(key) : String(getCounter(key))\n    }\n\n    // Added for remove vue undefined warning while ssr\n    this.$fetch = () => {} // issue #8043\n    Vue.util.defineReactive(this, '$fetchState', {\n      pending: true,\n      error: null,\n      timestamp: Date.now()\n    })\n\n    addLifecycleHook(this, 'serverPrefetch', serverPrefetch)\n  }\n}\n","import { getMatchedComponents, setScrollRestoration } from './utils'\n\nif (process.client) {\n  if ('scrollRestoration' in window.history) {\n    setScrollRestoration('manual')\n\n    // reset scrollRestoration to auto when leaving page, allowing page reload\n    // and back-navigation from other pages to use the browser to restore the\n    // scrolling position.\n    window.addEventListener('beforeunload', () => {\n      setScrollRestoration('auto')\n    })\n\n    // Setting scrollRestoration to manual again when returning to this page.\n    window.addEventListener('load', () => {\n      setScrollRestoration('manual')\n    })\n  }\n}\n\nfunction shouldScrollToTop(route) {\n   const Pages = getMatchedComponents(route)\n   if (Pages.length === 1) {\n     const { options = {} } = Pages[0]\n     return options.scrollToTop !== false\n   }\n   return Pages.some(({ options }) => options && options.scrollToTop)\n}\n\nexport default function (to, from, savedPosition) {\n  // If the returned position is falsy or an empty object, will retain current scroll position\n  let position = false\n  const isRouteChanged = to !== from\n\n  // savedPosition is only available for popstate navigations (back button)\n  if (savedPosition) {\n    position = savedPosition\n  } else if (isRouteChanged && shouldScrollToTop(to)) {\n    position = { x: 0, y: 0 }\n  }\n\n  const nuxt = window.$nuxt\n\n  if (\n    // Initial load (vuejs/vue-router#3199)\n    !isRouteChanged ||\n    // Route hash changes\n    (to.path === from.path && to.hash !== from.hash)\n  ) {\n    nuxt.$nextTick(() => nuxt.$emit('triggerScroll'))\n  }\n\n  return new Promise((resolve) => {\n    // wait for the out transition to complete (if necessary)\n    nuxt.$once('triggerScroll', () => {\n      // coords will be used if no selector is provided,\n      // or if the selector didn't match any element.\n      if (to.hash) {\n        let hash = to.hash\n        // CSS.escape() is not supported with IE and Edge.\n        if (typeof window.CSS !== 'undefined' && typeof window.CSS.escape !== 'undefined') {\n          hash = '#' + window.CSS.escape(hash.substr(1))\n        }\n        try {\n          if (document.querySelector(hash)) {\n            // scroll to anchor by returning the selector\n            position = { selector: hash }\n          }\n        } catch (e) {\n          console.warn('Failed to save scroll position. Please add CSS.escape() polyfill (https://github.com/mathiasbynens/CSS.escape).')\n        }\n      }\n      resolve(position)\n    })\n  })\n}\n","import Vue from 'vue'\nimport Router from 'vue-router'\nimport { normalizeURL, decode } from 'ufo'\nimport { interopDefault } from './utils'\nimport scrollBehavior from './router.scrollBehavior.js'\n\nconst _2e2c7d22 = () => interopDefault(import('../pages/index.vue' /* webpackChunkName: \"pages/index\" */))\n\nconst emptyFn = () => {}\n\nVue.use(Router)\n\nexport const routerOptions = {\n  mode: 'history',\n  base: '/',\n  linkActiveClass: 'nuxt-link-active',\n  linkExactActiveClass: 'nuxt-link-exact-active',\n  scrollBehavior,\n\n  routes: [{\n    path: \"/\",\n    component: _2e2c7d22,\n    name: \"index\"\n  }],\n\n  fallback: false\n}\n\nexport function createRouter (ssrContext, config) {\n  const base = (config._app && config._app.basePath) || routerOptions.base\n  const router = new Router({ ...routerOptions, base  })\n\n  // TODO: remove in Nuxt 3\n  const originalPush = router.push\n  router.push = function push (location, onComplete = emptyFn, onAbort) {\n    return originalPush.call(this, location, onComplete, onAbort)\n  }\n\n  const resolve = router.resolve.bind(router)\n  router.resolve = (to, current, append) => {\n    if (typeof to === 'string') {\n      to = normalizeURL(to)\n    }\n    return resolve(to, current, append)\n  }\n\n  return router\n}\n","\nexport default {\n  name: 'NuxtChild',\n  functional: true,\n  props: {\n    nuxtChildKey: {\n      type: String,\n      default: ''\n    },\n    keepAlive: Boolean,\n    keepAliveProps: {\n      type: Object,\n      default: undefined\n    }\n  },\n  render (_, { parent, data, props }) {\n    const h = parent.$createElement\n\n    data.nuxtChild = true\n    const _parent = parent\n    const transitions = parent.$nuxt.nuxt.transitions\n    const defaultTransition = parent.$nuxt.nuxt.defaultTransition\n\n    let depth = 0\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.nuxtChild) {\n        depth++\n      }\n      parent = parent.$parent\n    }\n    data.nuxtChildDepth = depth\n    const transition = transitions[depth] || defaultTransition\n    const transitionProps = {}\n    transitionsKeys.forEach((key) => {\n      if (typeof transition[key] !== 'undefined') {\n        transitionProps[key] = transition[key]\n      }\n    })\n\n    const listeners = {}\n    listenersKeys.forEach((key) => {\n      if (typeof transition[key] === 'function') {\n        listeners[key] = transition[key].bind(_parent)\n      }\n    })\n    if (process.client) {\n      // Add triggerScroll event on beforeEnter (fix #1376)\n      const beforeEnter = listeners.beforeEnter\n      listeners.beforeEnter = (el) => {\n        // Ensure to trigger scroll event after calling scrollBehavior\n        window.$nuxt.$nextTick(() => {\n          window.$nuxt.$emit('triggerScroll')\n        })\n        if (beforeEnter) {\n          return beforeEnter.call(_parent, el)\n        }\n      }\n    }\n\n    // make sure that leave is called asynchronous (fix #5703)\n    if (transition.css === false) {\n      const leave = listeners.leave\n\n      // only add leave listener when user didnt provide one\n      // or when it misses the done argument\n      if (!leave || leave.length < 2) {\n        listeners.leave = (el, done) => {\n          if (leave) {\n            leave.call(_parent, el)\n          }\n\n          _parent.$nextTick(done)\n        }\n      }\n    }\n\n    let routerView = h('routerView', data)\n\n    if (props.keepAlive) {\n      routerView = h('keep-alive', { props: props.keepAliveProps }, [routerView])\n    }\n\n    return h('transition', {\n      props: transitionProps,\n      on: listeners\n    }, [routerView])\n  }\n}\n\nconst transitionsKeys = [\n  'name',\n  'mode',\n  'appear',\n  'css',\n  'type',\n  'duration',\n  'enterClass',\n  'leaveClass',\n  'appearClass',\n  'enterActiveClass',\n  'enterActiveClass',\n  'leaveActiveClass',\n  'appearActiveClass',\n  'enterToClass',\n  'leaveToClass',\n  'appearToClass'\n]\n\nconst listenersKeys = [\n  'beforeEnter',\n  'enter',\n  'afterEnter',\n  'enterCancelled',\n  'beforeLeave',\n  'leave',\n  'afterLeave',\n  'leaveCancelled',\n  'beforeAppear',\n  'appear',\n  'afterAppear',\n  'appearCancelled'\n]\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"__nuxt-error-page\"},[_vm._ssrNode(\"<div class=\\\"error\\\">\",\"</div>\",[_vm._ssrNode(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"90\\\" height=\\\"90\\\" fill=\\\"#DBE1EC\\\" viewBox=\\\"0 0 48 48\\\"><path d=\\\"M22 30h4v4h-4zm0-16h4v12h-4zm1.99-10C12.94 4 4 12.95 4 24s8.94 20 19.99 20S44 35.05 44 24 35.04 4 23.99 4zM24 40c-8.84 0-16-7.16-16-16S15.16 8 24 8s16 7.16 16 16-7.16 16-16 16z\\\"></path></svg> <div class=\\\"title\\\">\"+_vm._ssrEscape(_vm._s(_vm.message))+\"</div> \"),(_vm.statusCode === 404)?_vm._ssrNode(\"<p class=\\\"description\\\">\",\"</p>\",[(typeof _vm.$route === 'undefined')?_vm._ssrNode(\"<a href=\\\"/\\\" class=\\\"error-link\\\">\",\"</a>\"):_c('NuxtLink',{staticClass:\"error-link\",attrs:{\"to\":\"/\"}},[_vm._v(\"Back to the home page\")])],1):_vm._e(),_vm._ssrNode(\" <div class=\\\"logo\\\"><a href=\\\"https://nuxtjs.org\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\">Nuxt</a></div>\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'NuxtError',\n  props: {\n    error: {\n      type: Object,\n      default: null\n    }\n  },\n  computed: {\n    statusCode () {\n      return (this.error && this.error.statusCode) || 500\n    },\n    message () {\n      return this.error.message || 'Error'\n    }\n  },\n  head () {\n    return {\n      title: this.message,\n      meta: [\n        {\n          name: 'viewport',\n          content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0'\n        }\n      ]\n    }\n  }\n}\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-error.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-error.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./nuxt-error.vue?vue&type=template&id=5eb69f1c&\"\nimport script from \"./nuxt-error.vue?vue&type=script&lang=js&\"\nexport * from \"./nuxt-error.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./nuxt-error.vue?vue&type=style&index=0&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"21958d2c\"\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport { compile } from '../utils'\n\nimport NuxtError from './nuxt-error.vue'\n\nimport NuxtChild from './nuxt-child'\n\nexport default {\n  name: 'Nuxt',\n  components: {\n    NuxtChild,\n    NuxtError\n  },\n  props: {\n    nuxtChildKey: {\n      type: String,\n      default: undefined\n    },\n    keepAlive: Boolean,\n    keepAliveProps: {\n      type: Object,\n      default: undefined\n    },\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  errorCaptured (error) {\n    // if we receive and error while showing the NuxtError component\n    // capture the error and force an immediate update so we re-render\n    // without the NuxtError component\n    if (this.displayingNuxtError) {\n      this.errorFromNuxtError = error\n      this.$forceUpdate()\n    }\n  },\n  computed: {\n    routerViewKey () {\n      // If nuxtChildKey prop is given or current route has children\n      if (typeof this.nuxtChildKey !== 'undefined' || this.$route.matched.length > 1) {\n        return this.nuxtChildKey || compile(this.$route.matched[0].path)(this.$route.params)\n      }\n\n      const [matchedRoute] = this.$route.matched\n\n      if (!matchedRoute) {\n        return this.$route.path\n      }\n\n      const Component = matchedRoute.components.default\n\n      if (Component && Component.options) {\n        const { options } = Component\n\n        if (options.key) {\n          return (typeof options.key === 'function' ? options.key(this.$route) : options.key)\n        }\n      }\n\n      const strict = /\\/$/.test(matchedRoute.path)\n      return strict ? this.$route.path : this.$route.path.replace(/\\/$/, '')\n    }\n  },\n  beforeCreate () {\n    Vue.util.defineReactive(this, 'nuxt', this.$root.$options.nuxt)\n  },\n  render (h) {\n    // if there is no error\n    if (!this.nuxt.err) {\n      // Directly return nuxt child\n      return h('NuxtChild', {\n        key: this.routerViewKey,\n        props: this.$props\n      })\n    }\n\n    // if an error occurred within NuxtError show a simple\n    // error message instead to prevent looping\n    if (this.errorFromNuxtError) {\n      this.$nextTick(() => (this.errorFromNuxtError = false))\n\n      return h('div', {}, [\n        h('h2', 'An error occurred while showing the error page'),\n        h('p', 'Unfortunately an error occurred and while showing the error page another error occurred'),\n        h('p', `Error details: ${this.errorFromNuxtError.toString()}`),\n        h('nuxt-link', { props: { to: '/' } }, 'Go back to home')\n      ])\n    }\n\n    // track if we are showing the NuxtError component\n    this.displayingNuxtError = true\n    this.$nextTick(() => (this.displayingNuxtError = false))\n\n    return h(NuxtError, {\n      props: {\n        error: this.nuxt.err\n      }\n    })\n  }\n}\n","\nexport default {\n  name: 'NuxtLoading',\n  data () {\n    return {\n      percent: 0,\n      show: false,\n      canSucceed: true,\n      reversed: false,\n      skipTimerCount: 0,\n      rtl: false,\n      throttle: 200,\n      duration: 5000,\n      continuous: false\n    }\n  },\n  computed: {\n    left () {\n      if (!this.continuous && !this.rtl) {\n        return false\n      }\n      return this.rtl\n        ? (this.reversed ? '0px' : 'auto')\n        : (!this.reversed ? '0px' : 'auto')\n    }\n  },\n  beforeDestroy () {\n    this.clear()\n  },\n  methods: {\n    clear () {\n      clearInterval(this._timer)\n      clearTimeout(this._throttle)\n      this._timer = null\n    },\n    start () {\n      this.clear()\n      this.percent = 0\n      this.reversed = false\n      this.skipTimerCount = 0\n      this.canSucceed = true\n\n      if (this.throttle) {\n        this._throttle = setTimeout(() => this.startTimer(), this.throttle)\n      } else {\n        this.startTimer()\n      }\n      return this\n    },\n    set (num) {\n      this.show = true\n      this.canSucceed = true\n      this.percent = Math.min(100, Math.max(0, Math.floor(num)))\n      return this\n    },\n    get () {\n      return this.percent\n    },\n    increase (num) {\n      this.percent = Math.min(100, Math.floor(this.percent + num))\n      return this\n    },\n    decrease (num) {\n      this.percent = Math.max(0, Math.floor(this.percent - num))\n      return this\n    },\n    pause () {\n      clearInterval(this._timer)\n      return this\n    },\n    resume () {\n      this.startTimer()\n      return this\n    },\n    finish () {\n      this.percent = this.reversed ? 0 : 100\n      this.hide()\n      return this\n    },\n    hide () {\n      this.clear()\n      setTimeout(() => {\n        this.show = false\n        this.$nextTick(() => {\n          this.percent = 0\n          this.reversed = false\n        })\n      }, 500)\n      return this\n    },\n    fail (error) {\n      this.canSucceed = false\n      return this\n    },\n    startTimer () {\n      if (!this.show) {\n        this.show = true\n      }\n      if (typeof this._cut === 'undefined') {\n        this._cut = 10000 / Math.floor(this.duration)\n      }\n\n      this._timer = setInterval(() => {\n        /**\n         * When reversing direction skip one timers\n         * so 0, 100 are displayed for two iterations\n         * also disable css width transitioning\n         * which otherwise interferes and shows\n         * a jojo effect\n         */\n        if (this.skipTimerCount > 0) {\n          this.skipTimerCount--\n          return\n        }\n\n        if (this.reversed) {\n          this.decrease(this._cut)\n        } else {\n          this.increase(this._cut)\n        }\n\n        if (this.continuous) {\n          if (this.percent >= 100) {\n            this.skipTimerCount = 1\n\n            this.reversed = !this.reversed\n          } else if (this.percent <= 0) {\n            this.skipTimerCount = 1\n\n            this.reversed = !this.reversed\n          }\n        }\n      }, 100)\n    }\n  },\n  render (h) {\n    let el = h(false)\n    if (this.show) {\n      el = h('div', {\n        staticClass: 'nuxt-progress',\n        class: {\n          'nuxt-progress-notransition': this.skipTimerCount > 0,\n          'nuxt-progress-failed': !this.canSucceed\n        },\n        style: {\n          width: this.percent + '%',\n          left: this.left\n        }\n      })\n    }\n    return el\n  }\n}\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-loading.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js??ref--2-0!../../node_modules/@nuxt/components/dist/loader.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./nuxt-loading.vue?vue&type=script&lang=js&\"","var render, staticRenderFns\nimport script from \"./nuxt-loading.vue?vue&type=script&lang=js&\"\nexport * from \"./nuxt-loading.vue?vue&type=script&lang=js&\"\nfunction injectStyles (context) {\n  \n  var style0 = require(\"./nuxt-loading.vue?vue&type=style&index=0&lang=css&\")\nif (style0.__inject__) style0.__inject__(context)\n\n}\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  injectStyles,\n  null,\n  \"6d23841e\"\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('Nuxt')}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./default.vue?vue&type=template&id=0040005c&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  \"c974bde4\"\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport { decode, parsePath, withoutBase, withoutTrailingSlash, normalizeURL } from 'ufo'\n\nimport { getMatchedComponentsInstances, getChildrenComponentInstancesUsingFetch, promisify, globalHandleError, urlJoin, sanitizeComponent } from './utils'\nimport NuxtError from './components/nuxt-error.vue'\nimport NuxtLoading from './components/nuxt-loading.vue'\n\nimport _6f6c098b from './layouts/default.vue'\n\nconst layouts = { \"_default\": sanitizeComponent(_6f6c098b) }\n\nexport default {\n  render (h, props) {\n    const loadingEl = h('NuxtLoading', { ref: 'loading' })\n\n    const layoutEl = h(this.layout || 'nuxt')\n    const templateEl = h('div', {\n      domProps: {\n        id: '__layout'\n      },\n      key: this.layoutName\n    }, [layoutEl])\n\n    const transitionEl = h('transition', {\n      props: {\n        name: 'layout',\n        mode: 'out-in'\n      },\n      on: {\n        beforeEnter (el) {\n          // Ensure to trigger scroll event after calling scrollBehavior\n          window.$nuxt.$nextTick(() => {\n            window.$nuxt.$emit('triggerScroll')\n          })\n        }\n      }\n    }, [templateEl])\n\n    return h('div', {\n      domProps: {\n        id: '__nuxt'\n      }\n    }, [\n      loadingEl,\n\n      transitionEl\n    ])\n  },\n\n  data: () => ({\n    isOnline: true,\n\n    layout: null,\n    layoutName: '',\n\n    nbFetching: 0\n    }),\n\n  beforeCreate () {\n    Vue.util.defineReactive(this, 'nuxt', this.$options.nuxt)\n  },\n  created () {\n    // Add this.$nuxt in child instances\n    this.$root.$options.$nuxt = this\n\n    if (process.client) {\n      // add to window so we can listen when ready\n      window.$nuxt = this\n\n      this.refreshOnlineStatus()\n      // Setup the listeners\n      window.addEventListener('online', this.refreshOnlineStatus)\n      window.addEventListener('offline', this.refreshOnlineStatus)\n    }\n    // Add $nuxt.error()\n    this.error = this.nuxt.error\n    // Add $nuxt.context\n    this.context = this.$options.context\n  },\n\n  async mounted () {\n    this.$loading = this.$refs.loading\n  },\n\n  watch: {\n    'nuxt.err': 'errorChanged'\n  },\n\n  computed: {\n    isOffline () {\n      return !this.isOnline\n    },\n\n    isFetching () {\n      return this.nbFetching > 0\n    },\n  },\n\n  methods: {\n    refreshOnlineStatus () {\n      if (process.client) {\n        if (typeof window.navigator.onLine === 'undefined') {\n          // If the browser doesn't support connection status reports\n          // assume that we are online because most apps' only react\n          // when they now that the connection has been interrupted\n          this.isOnline = true\n        } else {\n          this.isOnline = window.navigator.onLine\n        }\n      }\n    },\n\n    async refresh () {\n      const pages = getMatchedComponentsInstances(this.$route)\n\n      if (!pages.length) {\n        return\n      }\n      this.$loading.start()\n\n      const promises = pages.map((page) => {\n        const p = []\n\n        // Old fetch\n        if (page.$options.fetch && page.$options.fetch.length) {\n          p.push(promisify(page.$options.fetch, this.context))\n        }\n        if (page.$fetch) {\n          p.push(page.$fetch())\n        } else {\n          // Get all component instance to call $fetch\n          for (const component of getChildrenComponentInstancesUsingFetch(page.$vnode.componentInstance)) {\n            p.push(component.$fetch())\n          }\n        }\n\n        if (page.$options.asyncData) {\n          p.push(\n            promisify(page.$options.asyncData, this.context)\n              .then((newData) => {\n                for (const key in newData) {\n                  Vue.set(page.$data, key, newData[key])\n                }\n              })\n          )\n        }\n\n        return Promise.all(p)\n      })\n      try {\n        await Promise.all(promises)\n      } catch (error) {\n        this.$loading.fail(error)\n        globalHandleError(error)\n        this.error(error)\n      }\n      this.$loading.finish()\n    },\n    errorChanged () {\n      if (this.nuxt.err) {\n        if (this.$loading) {\n          if (this.$loading.fail) {\n            this.$loading.fail(this.nuxt.err)\n          }\n          if (this.$loading.finish) {\n            this.$loading.finish()\n          }\n        }\n\n        let errorLayout = (NuxtError.options || NuxtError).layout;\n\n        if (typeof errorLayout === 'function') {\n          errorLayout = errorLayout(this.context)\n        }\n\n        this.setLayout(errorLayout)\n      }\n    },\n\n    setLayout (layout) {\n      if (!layout || !layouts['_' + layout]) {\n        layout = 'default'\n      }\n      this.layoutName = layout\n      this.layout = layouts['_' + layout]\n      return this.layout\n    },\n    loadLayout (layout) {\n      if (!layout || !layouts['_' + layout]) {\n        layout = 'default'\n      }\n      return Promise.resolve(layouts['_' + layout])\n    },\n  },\n\n  components: {\n    NuxtLoading\n  }\n}\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nlet store = {};\n\n(function updateModules () {\n  store = normalizeRoot(require('../store/index.js'), 'store/index.js')\n\n  // If store is an exported method = classic mode (deprecated)\n\n  // Enforce store modules\n  store.modules = store.modules || {}\n\n  // If the environment supports hot reloading...\n})()\n\n// createStore\nexport const createStore = store instanceof Function ? store : () => {\n  return new Vuex.Store(Object.assign({\n    strict: (process.env.NODE_ENV !== 'production')\n  }, store))\n}\n\nfunction normalizeRoot (moduleData, filePath) {\n  moduleData = moduleData.default || moduleData\n\n  if (moduleData.commit) {\n    throw new Error(`[nuxt] ${filePath} should export a method that returns a Vuex instance.`)\n  }\n\n  if (typeof moduleData !== 'function') {\n    // Avoid TypeError: setting a property that has only a getter when overwriting top level keys\n    moduleData = Object.assign({}, moduleData)\n  }\n  return normalizeModule(moduleData, filePath)\n}\n\nfunction normalizeModule (moduleData, filePath) {\n  if (moduleData.state && typeof moduleData.state !== 'function') {\n    console.warn(`'state' should be a method that returns an object in ${filePath}`)\n\n    const state = Object.assign({}, moduleData.state)\n    // Avoid TypeError: setting a property that has only a getter when overwriting top level keys\n    moduleData = Object.assign({}, moduleData, { state: () => state })\n  }\n  return moduleData\n}\n","import Vue from 'vue'\nimport * as components from './index'\n\nfor (const name in components) {\n  Vue.component(name, components[name])\n  Vue.component('Lazy' + name, components[name])\n}\n","/* eslint-disable no-console */\n/*\n * Copyright 2021 Richard Schloss (https://github.com/richardeschloss/nuxt-socket-io)\n */\n\nimport io from 'socket.io-client'\nimport Debug from 'debug'\nimport emitter from 'tiny-emitter/instance'\n/*\n TODO:\n 1) will enable when '@nuxtjs/composition-api' reaches stable version:\n 2) will bump from devDep to dep when stable\n*/\n // import { watch as vueWatch } from '@nuxtjs/composition-api'\n\nconst debug = Debug('nuxt-socket-io')\n\nfunction PluginOptions() {\n  let _pluginOptions\n  if (process.env.TEST === undefined) {\n    _pluginOptions = {\"sockets\":[{\"default\":true,\"name\":\"main\",\"url\":\"https://test-t6dnbai-n2eqhwdfk2pae.au.platformsh.site/ws\"}]}\n  }\n\n  return Object.freeze({\n    get: () => _pluginOptions,\n    set: (opts) => (_pluginOptions = opts)\n  })\n}\n\nconst isRefImpl = (any) => any && any.constructor.name === 'RefImpl'\n\nconst _pOptions = PluginOptions()\n\nconst _sockets = {}\n\nlet warn, infoMsgs\n\nfunction camelCase(str) {\n  return str\n    .replace(/[_\\-\\s](.)/g, function($1) {\n      return $1.toUpperCase()\n    })\n    .replace(/[-_\\s]/g, '')\n    .replace(/^(.)/, function($1) {\n      return $1.toLowerCase()\n    })\n    .replace(/[^\\w\\s]/gi, '')\n}\n\nfunction propExists(obj, path) {\n  const exists = path.split('.').reduce((out, prop) => {\n    if (out !== undefined && out[prop] !== undefined) {\n      return out[prop]\n    }\n  }, obj)\n\n  return exists !== undefined\n}\n\nfunction parseEntry(entry, entryType) {\n  let evt, mapTo, pre, body, post, emitEvt, msgLabel\n  if (typeof entry === 'string') {\n    let subItems = []\n    const items = entry.trim().split(/\\s*\\]\\s*/)\n    if (items.length > 1) {\n      pre = items[0]\n      subItems = items[1].split(/\\s*\\[\\s*/)\n    } else {\n      subItems = items[0].split(/\\s*\\[\\s*/)\n    }\n    ;[body, post] = subItems\n    if (body.includes('-->')) {\n      ;[evt, mapTo] = body.split(/\\s*-->\\s*/)\n    } else if (body.includes('<--')) {\n      ;[evt, mapTo] = body.split(/\\s*<--\\s*/)\n    } else {\n      evt = body\n    }\n\n    if (entryType === 'emitter') {\n      ;[emitEvt, msgLabel] = evt.split(/\\s*\\+\\s*/)\n    } else if (mapTo === undefined) {\n      mapTo = evt\n    }\n  } else if (entryType === 'emitBack') {\n    ;[[mapTo, evt]] = Object.entries(entry)\n  } else {\n    ;[[evt, mapTo]] = Object.entries(entry)\n  }\n  return { pre, post, evt, mapTo, emitEvt, msgLabel }\n}\n\nfunction assignMsg(ctx, prop) {\n  let msg\n  if (prop !== undefined) {\n    if (ctx[prop] !== undefined) {\n      if (typeof ctx[prop] === 'object') {\n        msg = ctx[prop].constructor.name === 'Array' ? [] : {}\n        Object.assign(msg, ctx[prop])\n      } else {\n        msg = ctx[prop]\n      }\n    } else {\n      warn(`prop or data item \"${prop}\" not defined`)\n    }\n    debug(`assigned ${prop} to ${msg}`)\n  }\n  return msg\n}\n\nfunction assignResp(ctx, prop, resp) {\n  if (prop !== undefined) {\n    if (ctx[prop] !== undefined) {\n      if (typeof ctx[prop] !== 'function') {\n        // In vue3, it's possible to create\n        // reactive refs on the fly with ref()\n        // so check for that here.\n        // (this would elimnate the need for v2's\n        // this.$set because we just set the value prop\n        // to trigger the UI changes)\n        if (isRefImpl(ctx[prop])) {\n          ctx[prop].value = resp\n        } else {\n          ctx[prop] = resp\n        }\n        debug(`assigned ${resp} to ${prop}`)\n      }\n    } else {\n      warn(`${prop} not defined on instance`)\n    }\n  }\n}\n\nasync function runHook(ctx, prop, data) {\n  if (prop !== undefined) {\n    if (ctx[prop]) return await ctx[prop](data)\n    else warn(`method ${prop} not defined`)\n  }\n}\n\nfunction propByPath(obj, path) {\n  return path.split(/[/.]/).reduce((out, prop) => {\n    if (out !== undefined && out[prop] !== undefined) {\n      return out[prop]\n    }\n  }, obj)\n}\n\nfunction validateSockets(sockets) {\n  return (sockets\n    && Array.isArray(sockets)\n    && sockets.length > 0)\n}\n\nconst register = {\n  clientApiEvents({ ctx, store, socket, api }) {\n    const { evts } = api\n    Object.entries(evts).forEach(([emitEvt, schema]) => {\n      const { data: dataT } = schema\n      const fn = emitEvt + 'Emit'\n      if (ctx[emitEvt] !== undefined) {\n        if (dataT !== undefined) {\n          Object.entries(dataT).forEach(([key, val]) => {\n            ctx.$set(ctx[emitEvt], key, val)\n          })\n          debug('Initialized data for', emitEvt, dataT)\n        }\n      }\n\n      if (ctx[fn] !== undefined) return\n\n      ctx[fn] = (fnArgs) => {\n        const { label: apiLabel, ack, ...args } = fnArgs || {}\n        return new Promise(async (resolve, reject) => {\n          const label = apiLabel || api.label\n          const msg = Object.keys(args).length > 0 ? args : { ...ctx[emitEvt] }\n          msg.method = fn\n          if (ack) {\n            const ackd = await store.dispatch('$nuxtSocket/emit', {\n              label,\n              socket,\n              evt: emitEvt,\n              msg\n            })\n            resolve(ackd)\n          } else {\n            store.dispatch('$nuxtSocket/emit', {\n              label,\n              socket,\n              evt: emitEvt,\n              msg,\n              noAck: true\n            })\n            resolve()\n          }\n        })\n      }\n      debug('Registered clientAPI method', fn)\n    })\n  },\n  clientApiMethods({ ctx, socket, api }) {\n    const { methods } = api\n    const evts = Object.assign({}, methods, { getAPI: {} })\n    Object.entries(evts).forEach(([evt, schema]) => {\n      if (socket.hasListeners(evt)) {\n        warn(`evt ${evt} already has a listener registered`)\n      }\n\n      socket.on(evt, async (msg, cb) => {\n        if (evt === 'getAPI') {\n          if (cb) cb(api)\n        } else if (ctx[evt] !== undefined) {\n          msg.method = evt\n          const resp = await ctx[evt](msg)\n          if (cb) cb(resp)\n        } else if (cb) {\n          cb({\n            emitErr: 'notImplemented',\n            msg: `Client has not yet implemented method (${evt})`\n          })\n        }\n      })\n\n      debug(`registered client api method ${evt}`)\n      if (evt !== 'getAPI' && ctx[evt] === undefined) {\n        warn(\n          `client api method ${evt} has not been defined. ` +\n            `Either update the client api or define the method so it can be used by callers`\n        )\n      }\n    })\n  },\n  clientAPI({ ctx, store, socket, clientAPI }) {\n    if (clientAPI.methods) {\n      register.clientApiMethods({ ctx, socket, api: clientAPI })\n    }\n\n    if (clientAPI.evts) {\n      register.clientApiEvents({ ctx, store, socket, api: clientAPI })\n    }\n\n    store.commit('$nuxtSocket/SET_CLIENT_API', clientAPI)\n    debug('clientAPI registered', clientAPI)\n  },\n  serverApiEvents({ ctx, socket, api, label, ioDataProp, apiIgnoreEvts }) {\n    const { evts } = api\n    Object.entries(evts).forEach(([evt, entry]) => {\n      const { methods = [], data: dataT } = entry\n      if (apiIgnoreEvts.includes(evt)) {\n        debug(\n          `Event ${evt} is in ignore list (\"apiIgnoreEvts\"), not registering.`\n        )\n        return\n      }\n\n      if (socket.hasListeners(evt)) {\n        warn(`evt ${evt} already has a listener registered`)\n      }\n\n      if (methods.length === 0) {\n        let initVal = dataT\n        if (typeof initVal === 'object') {\n          initVal = dataT.constructor.name === 'Array' ? [] : {}\n        }\n        ctx.$set(ctx[ioDataProp], evt, initVal)\n      } else {\n        methods.forEach((method) => {\n          if (ctx[ioDataProp][method] === undefined) {\n            ctx.$set(ctx[ioDataProp], method, {})\n          }\n\n          ctx.$set(\n            ctx[ioDataProp][method],\n            evt,\n            dataT.constructor.name === 'Array' ? [] : {}\n          )\n        })\n      }\n\n      socket.on(evt, (msg, cb) => {\n        debug(`serverAPI event ${evt} rxd with msg`, msg)\n        const { method, data } = msg\n        if (method !== undefined) {\n          if (ctx[ioDataProp][method] === undefined) {\n            ctx.$set(ctx[ioDataProp], method, {})\n          }\n\n          ctx.$set(ctx[ioDataProp][method], evt, data)\n        } else {\n          ctx.$set(ctx[ioDataProp], evt, data)\n        }\n\n        if (cb) {\n          cb({ ack: 'ok' })\n        }\n      })\n      debug(`Registered listener for ${evt} on ${label}`)\n    })\n  },\n  serverApiMethods({ ctx, socket, store, api, label, ioApiProp, ioDataProp }) {\n    Object.entries(api.methods).forEach(([fn, schema]) => {\n      const { msg: msgT, resp: respT } = schema\n      if (ctx[ioDataProp][fn] === undefined) {\n        ctx.$set(ctx[ioDataProp], fn, {})\n        if (msgT !== undefined) {\n          ctx.$set(ctx[ioDataProp][fn], 'msg', { ...msgT })\n        }\n\n        if (respT !== undefined) {\n          ctx.$set(\n            ctx[ioDataProp][fn],\n            'resp',\n            respT.constructor.name === 'Array' ? [] : {}\n          )\n        }\n      }\n\n      ctx[ioApiProp][fn] = (args) => {\n        return new Promise(async (resolve, reject) => {\n          const emitEvt = fn\n          const msg = args !== undefined ? args : { ...ctx[ioDataProp][fn].msg }\n          debug(`${ioApiProp}:${label}: Emitting ${emitEvt} with ${msg}`)\n          const resp = await store.dispatch('$nuxtSocket/emit', {\n            label,\n            socket,\n            evt: emitEvt,\n            msg\n          })\n\n          ctx[ioDataProp][fn].resp = resp\n          resolve(resp)\n        })\n      }\n    })\n  },\n  async serverAPI({\n    ctx,\n    socket,\n    store,\n    label,\n    apiIgnoreEvts,\n    ioApiProp,\n    ioDataProp,\n    serverAPI,\n    clientAPI = {}\n  }) {\n    if (ctx[ioApiProp] === undefined) {\n      console.error(\n        `[nuxt-socket-io]: ${ioApiProp} needs to be defined in the current context for ` +\n          `serverAPI registration (vue requirement)`\n      )\n      return\n    }\n\n    const apiLabel = serverAPI.label || label\n    debug('register api for', apiLabel)\n    const api = store.state.$nuxtSocket.ioApis[apiLabel] || {}\n    const fetchedApi = await store.dispatch('$nuxtSocket/emit', {\n      label: apiLabel,\n      socket,\n      evt: serverAPI.evt || 'getAPI',\n      msg: serverAPI.data || {}\n    })\n\n    const isPeer =\n      clientAPI.label === fetchedApi.label &&\n      parseFloat(clientAPI.version) === parseFloat(fetchedApi.version)\n    if (isPeer) {\n      Object.assign(api, clientAPI)\n      store.commit('$nuxtSocket/SET_API', { label: apiLabel, api })\n      debug(`api for ${apiLabel} registered`, api)\n    } else if (parseFloat(api.version) !== parseFloat(fetchedApi.version)) {\n      Object.assign(api, fetchedApi)\n      store.commit('$nuxtSocket/SET_API', { label: apiLabel, api })\n      debug(`api for ${apiLabel} registered`, api)\n    }\n\n    ctx.$set(ctx, ioApiProp, api)\n\n    if (api.methods !== undefined) {\n      register.serverApiMethods({\n        ctx,\n        socket,\n        store,\n        api,\n        label,\n        ioApiProp,\n        ioDataProp\n      })\n      debug(\n        `Attached methods for ${label} to ${ioApiProp}`,\n        Object.keys(api.methods)\n      )\n    }\n\n    if (api.evts !== undefined) {\n      register.serverApiEvents({\n        ctx,\n        socket,\n        api,\n        label,\n        ioDataProp,\n        apiIgnoreEvts\n      })\n      debug(`registered evts for ${label} to ${ioApiProp}`)\n    }\n\n    ctx.$set(ctx[ioApiProp], 'ready', true)\n    debug('ioApi', ctx[ioApiProp])\n  },\n  emitErrors({ ctx, err, emitEvt, emitErrorsProp }) {\n    if (ctx[emitErrorsProp][emitEvt] === undefined) {\n      ctx[emitErrorsProp][emitEvt] = []\n    }\n    ctx[emitErrorsProp][emitEvt].push(err)\n  },\n  emitTimeout({ ctx, emitEvt, emitErrorsProp, emitTimeout, timerObj }) {\n    return new Promise((resolve, reject) => {\n      timerObj.timer = setTimeout(() => {\n        const err = {\n          message: 'emitTimeout',\n          emitEvt,\n          emitTimeout,\n          hint: [\n            `1) Is ${emitEvt} supported on the backend?`,\n            `2) Is emitTimeout ${emitTimeout} ms too small?`\n          ].join('\\r\\n'),\n          timestamp: Date.now()\n        }\n        debug('emitEvt timed out', err)\n        if (typeof ctx[emitErrorsProp] === 'object') {\n          register.emitErrors({ ctx, err, emitEvt, emitErrorsProp })\n          resolve()\n        } else {\n          reject(err)\n        }\n      }, emitTimeout)\n    })\n  },\n  emitBacks({ ctx, socket, entries }) {\n    entries.forEach((entry) => {\n      const { pre, post, evt, mapTo } = parseEntry(entry, 'emitBack')\n      if (propExists(ctx, mapTo)) {\n        debug('registered local emitBack', { mapTo })\n        ctx.$watch(mapTo, async function(data, oldData) {\n          debug('local data changed', evt, data)\n          const preResult = await runHook(ctx, pre, { data, oldData })\n          if (preResult === false) {\n            return Promise.resolve()\n          }\n          debug('Emitting back:', { evt, mapTo, data })\n          return new Promise((resolve) => {\n            socket.emit(evt, { data }, (resp) => {\n              runHook(ctx, post, resp)\n              resolve(resp)\n            })\n            if (post === undefined) resolve()\n          })\n        })\n      } else {\n        warn(`Specified emitback ${mapTo} is not defined in component`)\n      }\n    })\n  },\n  emitBacksVuex({ ctx, store, useSocket, socket, entries }) {\n    entries.forEach((entry) => {\n      const { pre, post, evt, mapTo } = parseEntry(entry, 'emitBack')\n\n      if (useSocket.registeredWatchers.includes(mapTo)) {\n        return\n      }\n\n      store.watch(\n        (state) => {\n          const watchProp = propByPath(state, mapTo)\n          if (watchProp === undefined) {\n            throw new Error(\n              [\n                `[nuxt-socket-io]: Trying to register emitback ${mapTo} failed`,\n                `because it is not defined in Vuex.`,\n                'Is state set up correctly in your stores folder?'\n              ].join('\\n')\n            )\n          }\n          useSocket.registeredWatchers.push(mapTo)\n          debug('emitBack registered', { mapTo })\n          return watchProp\n        },\n        async (data, oldData) => {\n          debug('vuex emitBack data changed', { emitBack: evt, data, oldData })\n          const preResult = await runHook(ctx, pre, { data, oldData })\n          if (preResult === false) {\n            return Promise.resolve()\n          }\n          debug('Emitting back:', { evt, mapTo, data })\n          socket.emit(evt, { data }, (resp) => {\n            runHook(ctx, post, resp)\n          })\n        }\n      )\n    })\n  },\n  emitters({ ctx, socket, entries, emitTimeout, emitErrorsProp }) {\n    entries.forEach((entry) => {\n      const { pre, post, mapTo, emitEvt, msgLabel } = parseEntry(\n        entry,\n        'emitter'\n      )\n      ctx[emitEvt] = async function(args) {\n        const msg = args !== undefined ? args : assignMsg(ctx, msgLabel)\n        debug('Emit evt', { emitEvt, msg })\n        const preResult = await runHook(ctx, pre, msg)\n        if (preResult === false) {\n          return Promise.resolve()\n        }\n        return new Promise((resolve, reject) => {\n          const timerObj = {}\n          socket.emit(emitEvt, msg, (resp) => {\n            debug('Emitter response rxd', { emitEvt, resp })\n            clearTimeout(timerObj.timer)\n            const { emitError, ...errorDetails } = resp || {}\n            if (emitError !== undefined) {\n              const err = {\n                message: emitError,\n                emitEvt,\n                errorDetails,\n                timestamp: Date.now()\n              }\n              debug('Emit error occurred', err)\n              if (typeof ctx[emitErrorsProp] === 'object') {\n                register.emitErrors({\n                  ctx,\n                  err,\n                  emitEvt,\n                  emitErrorsProp\n                })\n                resolve()\n              } else {\n                reject(err)\n              }\n            } else {\n              assignResp(ctx.$data || ctx, mapTo, resp)\n              runHook(ctx, post, resp)\n              resolve(resp)\n            }\n          })\n          if (emitTimeout) {\n            register\n              .emitTimeout({\n                ctx,\n                emitEvt,\n                emitErrorsProp,\n                emitTimeout,\n                timerObj\n              })\n              .then(resolve)\n              .catch(reject)\n            debug('Emit timeout registered for evt', { emitEvt, emitTimeout })\n          }\n        })\n      }\n      debug('Emitter created', { emitter: emitEvt })\n    })\n  },\n  listeners({ ctx, socket, entries }) {\n    entries.forEach((entry) => {\n      const { pre, post, evt, mapTo } = parseEntry(entry)\n      debug('Registered local listener', evt)\n      socket.on(evt, async (resp) => {\n        debug('Local listener received data', { evt, resp })\n        await runHook(ctx, pre)\n        assignResp(ctx.$data || ctx, mapTo, resp)\n        runHook(ctx, post, resp)\n      })\n    })\n  },\n  listenersVuex({ ctx, socket, entries, storeFn, useSocket }) {\n    entries.forEach((entry) => {\n      const { pre, post, evt, mapTo } = parseEntry(entry)\n      async function vuexListenerEvt(resp) {\n        debug('Vuex listener received data', { evt, resp })\n        await runHook(ctx, pre)\n        storeFn(mapTo, resp)\n        runHook(ctx, post, resp)\n      }\n\n      if (useSocket.registeredVuexListeners.includes(evt)) return\n\n      socket.on(evt, vuexListenerEvt)\n      debug('Registered vuex listener', evt)\n      useSocket.registeredVuexListeners.push(evt)\n    })\n  },\n  namespace({ ctx, namespaceCfg, socket, emitTimeout, emitErrorsProp }) {\n    const { emitters = [], listeners = [], emitBacks = [] } = namespaceCfg\n    const sets = { emitters, listeners, emitBacks }\n    Object.entries(sets).forEach(([setName, entries]) => {\n      if (entries.constructor.name === 'Array') {\n        register[setName]({ ctx, socket, entries, emitTimeout, emitErrorsProp })\n      } else {\n        warn(\n          `[nuxt-socket-io]: ${setName} needs to be an array in namespace config`\n        )\n      }\n    })\n  },\n  vuexModule({ store }) {\n    store.registerModule(\n      '$nuxtSocket',\n      {\n        namespaced: true,\n        state: {\n          clientApis: {},\n          ioApis: {},\n          emitErrors: {},\n          emitTimeouts: {}\n        },\n        mutations: {\n          SET_API(state, { label, api }) {\n            state.ioApis[label] = api\n          },\n\n          SET_CLIENT_API(state, { label = 'clientAPI', ...api }) {\n            state.clientApis[label] = api\n          },\n\n          SET_EMIT_ERRORS(state, { label, emitEvt, err }) {\n            if (state.emitErrors[label] === undefined) {\n              state.emitErrors[label] = {}\n            }\n\n            if (state.emitErrors[label][emitEvt] === undefined) {\n              state.emitErrors[label][emitEvt] = []\n            }\n\n            state.emitErrors[label][emitEvt].push(err)\n          },\n\n          SET_EMIT_TIMEOUT(state, { label, emitTimeout }) {\n            state.emitTimeouts[label] = emitTimeout\n          }\n        },\n        actions: {\n          emit(\n            { state, commit },\n            { label, socket, evt, msg, emitTimeout, noAck }\n          ) {\n            debug('$nuxtSocket vuex action \"emit\" dispatched', label, evt)\n            return new Promise((resolve, reject) => {\n              const _socket = socket || _sockets[label]\n              const _emitTimeout =\n                emitTimeout !== undefined\n                  ? emitTimeout\n                  : state.emitTimeouts[label]\n\n              if (_socket === undefined) {\n                reject(\n                  new Error(\n                    'socket instance required. Please provide a valid socket label or socket instance'\n                  )\n                )\n              }\n              debug(`Emitting ${evt} with msg`, msg)\n              let timer\n              _socket.emit(evt, msg, (resp) => {\n                debug('Emitter response rxd', { evt, resp })\n                clearTimeout(timer)\n                const { emitError, ...errorDetails } = resp || {}\n                if (emitError !== undefined) {\n                  const err = {\n                    message: emitError,\n                    emitEvt: evt,\n                    errorDetails,\n                    timestamp: Date.now()\n                  }\n                  debug('Emit error occurred', err)\n                  if (label !== undefined && label !== '') {\n                    debug(\n                      `[nuxt-socket-io]: ${label} Emit error ${err.message} occurred and logged to vuex `,\n                      err\n                    )\n                    commit('SET_EMIT_ERRORS', { label, emitEvt: evt, err })\n                    resolve()\n                  } else {\n                    reject(new Error(JSON.stringify(err, null, '\\t')))\n                  }\n                } else {\n                  resolve(resp)\n                }\n              })\n\n              if (noAck) {\n                resolve()\n              }\n\n              if (_emitTimeout) {\n                debug(`registering emitTimeout ${_emitTimeout} ms for ${evt}`)\n                timer = setTimeout(() => {\n                  const err = {\n                    message: 'emitTimeout',\n                    emitEvt: evt,\n                    emitTimeout,\n                    hint: [\n                      `1) Is ${evt} supported on the backend?`,\n                      `2) Is emitTimeout ${_emitTimeout} ms too small?`\n                    ].join('\\r\\n'),\n                    timestamp: Date.now()\n                  }\n                  if (label !== undefined && label !== '') {\n                    commit('SET_EMIT_ERRORS', { label, emitEvt: evt, err })\n                    debug(\n                      `[nuxt-socket-io]: ${label} Emit error occurred and logged to vuex `,\n                      err\n                    )\n                    resolve()\n                  } else {\n                    reject(new Error(JSON.stringify(err, null, '\\t')))\n                  }\n                }, _emitTimeout)\n              }\n            })\n          }\n        }\n      },\n      { preserveState: false }\n    )\n  },\n  vuexOpts({ ctx, vuexOpts, useSocket, socket, store }) {\n    const { mutations = [], actions = [], emitBacks = [] } = vuexOpts\n    const sets = { mutations, actions, emitBacks }\n    const storeFns = {\n      mutations: 'commit',\n      actions: 'dispatch'\n    }\n    Object.entries(sets).forEach(([setName, entries]) => {\n      if (entries.constructor.name === 'Array') {\n        const fnName = storeFns[setName]\n        if (fnName) {\n          register.listenersVuex({\n            ctx,\n            socket,\n            entries,\n            storeFn: store[fnName],\n            useSocket\n          })\n        } else {\n          register.emitBacksVuex({ ctx, store, useSocket, socket, entries })\n        }\n      } else {\n        warn(`[nuxt-socket-io]: vuexOption ${setName} needs to be an array`)\n      }\n    })\n  },\n  socketStatus({ ctx, socket, connectUrl, statusProp }) {\n    const socketStatus = { connectUrl }\n    // See also:\n    // https://socket.io/docs/v3/migrating-from-2-x-to-3-0/index.html#The-Socket-instance-will-no-longer-forward-the-events-emitted-by-its-Manager\n    const clientEvts = [\n      'connect_error',\n      'connect_timeout',\n      'reconnect',\n      'reconnect_attempt',\n      'reconnecting', // socket.io-client v2.x only\n      'reconnect_error',\n      'reconnect_failed',\n      'ping',\n      'pong'\n    ]\n    clientEvts.forEach((evt) => {\n      const prop = camelCase(evt)\n      socketStatus[prop] = ''\n      function handleEvt(resp) {\n        Object.assign(ctx[statusProp], { [prop]: resp })\n      }\n      socket.on(evt, handleEvt)\n      socket.io.on(evt, handleEvt)\n    })\n    Object.assign(ctx, { [statusProp]: socketStatus })\n  },\n  teardown({ ctx, socket, useSocket }) {\n    // Setup listener for \"closeSockets\" in case\n    // multiple instances of nuxtSocket exist in the same\n    // component (only one destroy/unmount event takes place).\n    // When we teardown, we want to remove the listeners of all\n    // the socket.io-client instances\n    ctx.$once('closeSockets', function() {\n      debug('closing socket id=' + socket.id)\n      socket.removeAllListeners()\n      socket.close()\n    })\n\n    if (!ctx.registeredTeardown) {\n      // ctx.$destroy is defined in vue2\n      // but will go away in vue3 (in favor of onUnmounted)\n      // save user's destroy method and honor it after\n      // we run nuxt-socket-io's teardown\n      ctx.onComponentDestroy = ctx.$destroy\n      debug('teardown enabled for socket', { name: useSocket.name })\n      // Our $destroy method\n      // Gets called automatically on the destroy lifecycle\n      // in v2. In v3, we have call it with the\n      // onUnmounted hook\n      ctx.$destroy = function() {\n        debug('component destroyed, closing socket(s)', {\n          name: useSocket.name,\n          url: useSocket.url\n        })\n        useSocket.registeredVuexListeners = []\n        ctx.$emit('closeSockets')\n        // Only run the user's destroy method\n        // if it exists\n        if (ctx.onComponentDestroy) {\n          ctx.onComponentDestroy()\n        }\n      }\n\n      // onUnmounted will only exist in v3\n      if (ctx.onUnmounted) {\n        ctx.onUnmounted(ctx.$destroy)\n      }\n      ctx.registeredTeardown = true\n    }\n\n    socket.on('disconnect', () => {\n      debug('server disconnected', { name: useSocket.name, url: useSocket.url })\n      socket.close()\n    })\n  },\n  stubs(ctx) {\n    // Use a tiny event bus now. Can probably\n    // be replaced by watch eventually. For now this works.\n    if (!ctx.$on || !ctx.$emit || !ctx.$once) {\n      ctx.$once = (...args) => emitter.once(...args)\n      ctx.$on = (...args) => emitter.on(...args)\n      ctx.$off = (...args) => emitter.off(...args)\n      ctx.$emit = (...args) => emitter.emit(...args)\n    }\n\n    if (!ctx.$set) {\n      ctx.$set = (obj, key, val) => {\n        if (isRefImpl(obj[key])) {\n          obj[key].value = val\n        } else {\n          obj[key] = val\n        }\n      }\n    }\n\n    if (!ctx.$watch) {\n      ctx.$watch = (label, cb) => {\n        // will enable when '@nuxtjs/composition-api' reaches stable version:\n        // vueWatch(ctx.$data[label], cb)\n      }\n    }\n  }\n}\n\nfunction nuxtSocket(ioOpts) {\n  const {\n    name,\n    channel = '',\n    statusProp = 'socketStatus',\n    persist,\n    teardown = !persist,\n    emitTimeout,\n    emitErrorsProp = 'emitErrors',\n    ioApiProp = 'ioApi',\n    ioDataProp = 'ioData',\n    apiIgnoreEvts = [],\n    serverAPI,\n    clientAPI,\n    vuex,\n    namespaceCfg,\n    ...connectOpts\n  } = ioOpts\n  const pluginOptions = _pOptions.get()\n  const { $config, $store } = this\n  const store = this.$store || this.store\n\n  const runtimeOptions = { ...pluginOptions }\n  if ($config && $config.io) {\n    Object.assign(runtimeOptions, $config.io)\n    runtimeOptions.sockets = validateSockets(pluginOptions.sockets)\n      ? pluginOptions.sockets\n      : []\n    if (validateSockets($config.io.sockets)) {\n      $config.io.sockets.forEach((socket) => {\n        const fnd = runtimeOptions.sockets.find(({ name }) => name === socket.name)\n        if (fnd === undefined) {\n          runtimeOptions.sockets.push(socket)\n        }\n      })\n    }\n  }\n\n  const mergedOpts = Object.assign({}, runtimeOptions, ioOpts)\n  const { sockets, warnings = true, info = true } = mergedOpts\n\n  warn =\n    warnings && process.env.NODE_ENV !== 'production' ? console.warn : () => {}\n\n  infoMsgs =\n    info && process.env.NODE_ENV !== 'production' ? console.info : () => {}\n\n  if (!validateSockets(sockets)) {\n    throw new Error(\n      \"Please configure sockets if planning to use nuxt-socket-io: \\r\\n [{name: '', url: ''}]\"\n    )\n  }\n\n  register.stubs(this)\n\n  let useSocket = null\n\n  if (!name) {\n    useSocket = sockets.find((s) => s.default === true)\n  } else {\n    useSocket = sockets.find((s) => s.name === name)\n  }\n\n  if (!useSocket) {\n    useSocket = sockets[0]\n  }\n\n  if (!useSocket.name) {\n    useSocket.name = 'dflt'\n  }\n\n  if (!useSocket.url) {\n    warn(\n      `URL not defined for socket \"${useSocket.name}\". Defaulting to \"window.location\"`\n    )\n  }\n\n  if (!useSocket.registeredWatchers) {\n    useSocket.registeredWatchers = []\n  }\n\n  if (!useSocket.registeredVuexListeners) {\n    useSocket.registeredVuexListeners = []\n  }\n\n  let { url: connectUrl } = useSocket\n  if (connectUrl) {\n    connectUrl += channel\n  }\n\n  const vuexOpts = vuex || useSocket.vuex\n  const { namespaces = {} } = useSocket\n\n  let socket\n  const label =\n    persist && typeof persist === 'string'\n      ? persist\n      : `${useSocket.name}${channel}`\n\n  if (!store.state.$nuxtSocket) {\n    debug('vuex store $nuxtSocket does not exist....registering it')\n    register.vuexModule({ store })\n  }\n\n  if (emitTimeout) {\n    store.commit('$nuxtSocket/SET_EMIT_TIMEOUT', { label, emitTimeout })\n  }\n\n  function connectSocket() {\n    if (connectUrl) {\n      socket = io(connectUrl, connectOpts)\n      infoMsgs('[nuxt-socket-io]: connect', useSocket.name, connectUrl, connectOpts)\n    } else {\n      socket = io(channel, connectOpts)\n      infoMsgs(\n        '[nuxt-socket-io]: connect',\n        useSocket.name,\n        window.location,\n        channel,\n        connectOpts\n      )\n    }\n  }\n\n  if (persist) {\n    if (_sockets[label]) {\n      debug(`resuing persisted socket ${label}`)\n      socket = _sockets[label]\n      if (socket.disconnected) {\n        debug('persisted socket disconnected, reconnecting...')\n        connectSocket()\n      }\n    } else {\n      debug(`socket ${label} does not exist, creating and connecting to it..`)\n      connectSocket()\n      _sockets[label] = socket\n    }\n  } else {\n    connectSocket()\n  }\n\n  const _namespaceCfg = namespaceCfg || namespaces[channel]\n  if (_namespaceCfg) {\n    register.namespace({\n      ctx: this,\n      namespace: channel,\n      namespaceCfg: _namespaceCfg,\n      socket,\n      useSocket,\n      emitTimeout,\n      emitErrorsProp\n    })\n    debug('namespaces configured for socket', {\n      name: useSocket.name,\n      channel,\n      namespaceCfg\n    })\n  }\n\n  if (serverAPI) {\n    register.serverAPI({\n      store,\n      label,\n      apiIgnoreEvts,\n      ioApiProp,\n      ioDataProp,\n      ctx: this,\n      socket,\n      emitTimeout,\n      emitErrorsProp,\n      serverAPI,\n      clientAPI\n    })\n  }\n\n  if (clientAPI) {\n    register.clientAPI({\n      ctx: this,\n      store,\n      socket,\n      clientAPI\n    })\n  }\n\n  if (vuexOpts) {\n    register.vuexOpts({\n      ctx: this,\n      vuexOpts,\n      useSocket,\n      socket,\n      store\n    })\n    debug('vuexOpts configured for socket', { name: useSocket.name, vuexOpts })\n  }\n\n  if (\n    this.socketStatus !== undefined &&\n    typeof this.socketStatus === 'object'\n  ) {\n    register.socketStatus({ ctx: this, socket, connectUrl, statusProp })\n    debug('socketStatus registered for socket', {\n      name: useSocket.name,\n      url: connectUrl\n    })\n  }\n\n  if (teardown) {\n    register.teardown({\n      ctx: this,\n      socket,\n      useSocket\n    })\n  }\n  _pOptions.set({ sockets })\n  return socket\n}\n\nexport default function(context, inject) {\n  inject('nuxtSocket', nuxtSocket)\n}\n\nexport let pOptions\nif (process.env.TEST) {\n  pOptions = {}\n  Object.assign(pOptions, _pOptions)\n}\n","import Vue from 'vue'\nimport Vuex from 'vuex'\nimport Meta from 'vue-meta'\nimport ClientOnly from 'vue-client-only'\nimport NoSsr from 'vue-no-ssr'\nimport { createRouter } from './router.js'\nimport NuxtChild from './components/nuxt-child.js'\nimport NuxtError from './components/nuxt-error.vue'\nimport Nuxt from './components/nuxt.js'\nimport App from './App.js'\nimport { setContext, getLocation, getRouteData, normalizeError } from './utils'\nimport { createStore } from './store.js'\n\n/* Plugins */\n\nimport nuxt_plugin_plugin_731e9fb9 from 'nuxt_plugin_plugin_731e9fb9' // Source: ./components/plugin.js (mode: 'all')\nimport nuxt_plugin_nuxtsocketio_3142101a from 'nuxt_plugin_nuxtsocketio_3142101a' // Source: ./nuxt-socket-io.js (mode: 'all')\n\n// Component: <ClientOnly>\nVue.component(ClientOnly.name, ClientOnly)\n\n// TODO: Remove in Nuxt 3: <NoSsr>\nVue.component(NoSsr.name, {\n  ...NoSsr,\n  render (h, ctx) {\n    if (process.client && !NoSsr._warned) {\n      NoSsr._warned = true\n\n      console.warn('<no-ssr> has been deprecated and will be removed in Nuxt 3, please use <client-only> instead')\n    }\n    return NoSsr.render(h, ctx)\n  }\n})\n\n// Component: <NuxtChild>\nVue.component(NuxtChild.name, NuxtChild)\nVue.component('NChild', NuxtChild)\n\n// Component NuxtLink is imported in server.js or client.js\n\n// Component: <Nuxt>\nVue.component(Nuxt.name, Nuxt)\n\nObject.defineProperty(Vue.prototype, '$nuxt', {\n  get() {\n    const globalNuxt = this.$root.$options.$nuxt\n    if (process.client && !globalNuxt && typeof window !== 'undefined') {\n      return window.$nuxt\n    }\n    return globalNuxt\n  },\n  configurable: true\n})\n\nVue.use(Meta, {\"keyName\":\"head\",\"attribute\":\"data-n-head\",\"ssrAttribute\":\"data-n-head-ssr\",\"tagIDKeyName\":\"hid\"})\n\nconst defaultTransition = {\"name\":\"page\",\"mode\":\"out-in\",\"appear\":false,\"appearClass\":\"appear\",\"appearActiveClass\":\"appear-active\",\"appearToClass\":\"appear-to\"}\n\nconst originalRegisterModule = Vuex.Store.prototype.registerModule\n\nfunction registerModule (path, rawModule, options = {}) {\n  const preserveState = process.client && (\n    Array.isArray(path)\n      ? !!path.reduce((namespacedState, path) => namespacedState && namespacedState[path], this.state)\n      : path in this.state\n  )\n  return originalRegisterModule.call(this, path, rawModule, { preserveState, ...options })\n}\n\nasync function createApp(ssrContext, config = {}) {\n  const router = await createRouter(ssrContext, config)\n\n  const store = createStore(ssrContext)\n  // Add this.$router into store actions/mutations\n  store.$router = router\n\n  // Fix SSR caveat https://github.com/nuxt/nuxt.js/issues/3757#issuecomment-414689141\n  store.registerModule = registerModule\n\n  // Create Root instance\n\n  // here we inject the router and store to all child components,\n  // making them available everywhere as `this.$router` and `this.$store`.\n  const app = {\n    head: {\"title\":\"Test\",\"meta\":[{\"charset\":\"utf-8\"},{\"name\":\"viewport\",\"content\":\"width=device-width, initial-scale=1\"},{\"hid\":\"description\",\"name\":\"description\",\"content\":\"\"},{\"name\":\"format-detection\",\"content\":\"telephone=no\"}],\"link\":[{\"rel\":\"icon\",\"type\":\"image\\u002Fx-icon\",\"href\":\"\\u002Ffavicon.png\"}],\"style\":[],\"script\":[]},\n\n    store,\n    router,\n    nuxt: {\n      defaultTransition,\n      transitions: [defaultTransition],\n      setTransitions (transitions) {\n        if (!Array.isArray(transitions)) {\n          transitions = [transitions]\n        }\n        transitions = transitions.map((transition) => {\n          if (!transition) {\n            transition = defaultTransition\n          } else if (typeof transition === 'string') {\n            transition = Object.assign({}, defaultTransition, { name: transition })\n          } else {\n            transition = Object.assign({}, defaultTransition, transition)\n          }\n          return transition\n        })\n        this.$options.nuxt.transitions = transitions\n        return transitions\n      },\n\n      err: null,\n      dateErr: null,\n      error (err) {\n        err = err || null\n        app.context._errored = Boolean(err)\n        err = err ? normalizeError(err) : null\n        let nuxt = app.nuxt // to work with @vue/composition-api, see https://github.com/nuxt/nuxt.js/issues/6517#issuecomment-573280207\n        if (this) {\n          nuxt = this.nuxt || this.$options.nuxt\n        }\n        nuxt.dateErr = Date.now()\n        nuxt.err = err\n        // Used in src/server.js\n        if (ssrContext) {\n          ssrContext.nuxt.error = err\n        }\n        return err\n      }\n    },\n    ...App\n  }\n\n  // Make app available into store via this.app\n  store.app = app\n\n  const next = ssrContext ? ssrContext.next : location => app.router.push(location)\n  // Resolve route\n  let route\n  if (ssrContext) {\n    route = router.resolve(ssrContext.url).route\n  } else {\n    const path = getLocation(router.options.base, router.options.mode)\n    route = router.resolve(path).route\n  }\n\n  // Set context to app.context\n  await setContext(app, {\n    store,\n    route,\n    next,\n    error: app.nuxt.error.bind(app),\n    payload: ssrContext ? ssrContext.payload : undefined,\n    req: ssrContext ? ssrContext.req : undefined,\n    res: ssrContext ? ssrContext.res : undefined,\n    beforeRenderFns: ssrContext ? ssrContext.beforeRenderFns : undefined,\n    ssrContext\n  })\n\n  function inject(key, value) {\n    if (!key) {\n      throw new Error('inject(key, value) has no key provided')\n    }\n    if (value === undefined) {\n      throw new Error(`inject('${key}', value) has no value provided`)\n    }\n\n    key = '$' + key\n    // Add into app\n    app[key] = value\n    // Add into context\n    if (!app.context[key]) {\n      app.context[key] = value\n    }\n\n    // Add into store\n    store[key] = app[key]\n\n    // Check if plugin not already installed\n    const installKey = '__nuxt_' + key + '_installed__'\n    if (Vue[installKey]) {\n      return\n    }\n    Vue[installKey] = true\n    // Call Vue.use() to install the plugin into vm\n    Vue.use(() => {\n      if (!Object.prototype.hasOwnProperty.call(Vue.prototype, key)) {\n        Object.defineProperty(Vue.prototype, key, {\n          get () {\n            return this.$root.$options[key]\n          }\n        })\n      }\n    })\n  }\n\n  // Inject runtime config as $config\n  inject('config', config)\n\n  if (process.client) {\n    // Replace store state before plugins execution\n    if (window.__NUXT__ && window.__NUXT__.state) {\n      store.replaceState(window.__NUXT__.state)\n    }\n  }\n\n  // Add enablePreview(previewData = {}) in context for plugins\n  if (process.static && process.client) {\n    app.context.enablePreview = function (previewData = {}) {\n      app.previewData = Object.assign({}, previewData)\n      inject('preview', previewData)\n    }\n  }\n  // Plugin execution\n\n  if (typeof nuxt_plugin_plugin_731e9fb9 === 'function') {\n    await nuxt_plugin_plugin_731e9fb9(app.context, inject)\n  }\n\n  if (typeof nuxt_plugin_nuxtsocketio_3142101a === 'function') {\n    await nuxt_plugin_nuxtsocketio_3142101a(app.context, inject)\n  }\n\n  // Lock enablePreview in context\n  if (process.static && process.client) {\n    app.context.enablePreview = function () {\n      console.warn('You cannot call enablePreview() outside a plugin.')\n    }\n  }\n\n  // Wait for async component to be resolved first\n  await new Promise((resolve, reject) => {\n    // Ignore 404s rather than blindly replacing URL in browser\n    if (process.client) {\n      const { route } = router.resolve(app.context.route.fullPath)\n      if (!route.matched.length) {\n        return resolve()\n      }\n    }\n    router.replace(app.context.route.fullPath, resolve, (err) => {\n      // https://github.com/vuejs/vue-router/blob/v3.4.3/src/util/errors.js\n      if (!err._isRouter) return reject(err)\n      if (err.type !== 2 /* NavigationFailureType.redirected */) return resolve()\n\n      // navigated to a different route in router guard\n      const unregister = router.afterEach(async (to, from) => {\n        if (process.server && ssrContext && ssrContext.url) {\n          ssrContext.url = to.fullPath\n        }\n        app.context.route = await getRouteData(to)\n        app.context.params = to.params || {}\n        app.context.query = to.query || {}\n        unregister()\n        resolve()\n      })\n    })\n  })\n\n  return {\n    store,\n    app,\n    router\n  }\n}\n\nexport { createApp, NuxtError }\n","import Vue from 'vue'\n\nexport default {\n  name: 'NuxtLink',\n  extends: Vue.component('RouterLink'),\n  props: {\n    prefetch: {\n      type: Boolean,\n      default: true\n    },\n    noPrefetch: {\n      type: Boolean,\n      default: false\n    }\n  }\n}\n","import Vue from 'vue'\nimport { joinURL, normalizeURL, withQuery } from 'ufo'\nimport fetch from 'node-fetch'\nimport middleware from './middleware.js'\nimport {\n  applyAsyncData,\n  middlewareSeries,\n  sanitizeComponent,\n  getMatchedComponents,\n  promisify\n} from './utils.js'\nimport fetchMixin from './mixins/fetch.server'\nimport { createApp, NuxtError } from './index.js'\nimport NuxtLink from './components/nuxt-link.server.js' // should be included after ./index.js\n\n// Update serverPrefetch strategy\nVue.config.optionMergeStrategies.serverPrefetch = Vue.config.optionMergeStrategies.created\n\n// Fetch mixin\nif (!Vue.__nuxt__fetch__mixin__) {\n  Vue.mixin(fetchMixin)\n  Vue.__nuxt__fetch__mixin__ = true\n}\n\n// Component: <NuxtLink>\nVue.component(NuxtLink.name, NuxtLink)\nVue.component('NLink', NuxtLink)\n\nif (!global.fetch) { global.fetch = fetch }\n\nconst noopApp = () => new Vue({ render: h => h('div', { domProps: { id: '__nuxt' } }) })\n\nconst createNext = ssrContext => (opts) => {\n  // If static target, render on client-side\n  ssrContext.redirected = opts\n  if (ssrContext.target === 'static' || !ssrContext.res) {\n    ssrContext.nuxt.serverRendered = false\n    return\n  }\n  let fullPath = withQuery(opts.path, opts.query)\n  const $config = ssrContext.runtimeConfig || {}\n  const routerBase = ($config._app && $config._app.basePath) || '/'\n  if (!fullPath.startsWith('http') && (routerBase !== '/' && !fullPath.startsWith(routerBase))) {\n    fullPath = joinURL(routerBase, fullPath)\n  }\n  // Avoid loop redirect\n  if (decodeURI(fullPath) === decodeURI(ssrContext.url)) {\n    ssrContext.redirected = false\n    return\n  }\n  ssrContext.res.writeHead(opts.status, {\n    Location: normalizeURL(fullPath)\n  })\n  ssrContext.res.end()\n}\n\n// This exported function will be called by `bundleRenderer`.\n// This is where we perform data-prefetching to determine the\n// state of our application before actually rendering it.\n// Since data fetching is async, this function is expected to\n// return a Promise that resolves to the app instance.\nexport default async (ssrContext) => {\n  // Create ssrContext.next for simulate next() of beforeEach() when wanted to redirect\n  ssrContext.redirected = false\n  ssrContext.next = createNext(ssrContext)\n  // Used for beforeNuxtRender({ Components, nuxtState })\n  ssrContext.beforeRenderFns = []\n  // Nuxt object (window.{{globals.context}}, defaults to window.__NUXT__)\n  ssrContext.nuxt = { layout: 'default', data: [], fetch: {}, error: null, state: null, serverRendered: true, routePath: '' }\n\n    ssrContext.fetchCounters = {}\n\n  // Remove query from url is static target\n\n  // Public runtime config\n  ssrContext.nuxt.config = ssrContext.runtimeConfig.public\n  if (ssrContext.nuxt.config._app) {\n    __webpack_public_path__ = joinURL(ssrContext.nuxt.config._app.cdnURL, ssrContext.nuxt.config._app.assetsPath)\n  }\n  // Create the app definition and the instance (created for each request)\n  const { app, router, store } = await createApp(ssrContext, ssrContext.runtimeConfig.private)\n  const _app = new Vue(app)\n  // Add ssr route path to nuxt context so we can account for page navigation between ssr and csr\n  ssrContext.nuxt.routePath = app.context.route.path\n\n  // Add meta infos (used in renderer.js)\n  ssrContext.meta = _app.$meta()\n\n  // Keep asyncData for each matched component in ssrContext (used in app/utils.js via this.$ssrContext)\n  ssrContext.asyncData = {}\n\n  const beforeRender = async () => {\n    // Call beforeNuxtRender() methods\n    await Promise.all(ssrContext.beforeRenderFns.map(fn => promisify(fn, { Components, nuxtState: ssrContext.nuxt })))\n\n    ssrContext.rendered = () => {\n      // Add the state from the vuex store\n      ssrContext.nuxt.state = store.state\n    }\n  }\n\n  const renderErrorPage = async () => {\n    // Don't server-render the page in static target\n    if (ssrContext.target === 'static') {\n      ssrContext.nuxt.serverRendered = false\n    }\n\n    // Load layout for error page\n    const layout = (NuxtError.options || NuxtError).layout\n    const errLayout = typeof layout === 'function' ? layout.call(NuxtError, app.context) : layout\n    ssrContext.nuxt.layout = errLayout || 'default'\n    await _app.loadLayout(errLayout)\n    _app.setLayout(errLayout)\n\n    await beforeRender()\n    return _app\n  }\n  const render404Page = () => {\n    app.context.error({ statusCode: 404, path: ssrContext.url, message: 'This page could not be found' })\n    return renderErrorPage()\n  }\n\n  // Components are already resolved by setContext -> getRouteData (app/utils.js)\n  const Components = getMatchedComponents(app.context.route)\n\n  /*\n  ** Dispatch store nuxtServerInit\n  */\n  if (store._actions && store._actions.nuxtServerInit) {\n    try {\n      await store.dispatch('nuxtServerInit', app.context)\n    } catch (err) {\n      console.debug('Error occurred when calling nuxtServerInit: ', err.message)\n      throw err\n    }\n  }\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) {\n    return noopApp()\n  }\n  if (ssrContext.nuxt.error) {\n    return renderErrorPage()\n  }\n\n  /*\n  ** Call global middleware (nuxt.config.js)\n  */\n  let midd = []\n  midd = midd.map((name) => {\n    if (typeof name === 'function') {\n      return name\n    }\n    if (typeof middleware[name] !== 'function') {\n      app.context.error({ statusCode: 500, message: 'Unknown middleware ' + name })\n    }\n    return middleware[name]\n  })\n  await middlewareSeries(midd, app.context)\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) {\n    return noopApp()\n  }\n  if (ssrContext.nuxt.error) {\n    return renderErrorPage()\n  }\n\n  /*\n  ** Set layout\n  */\n  let layout = Components.length ? Components[0].options.layout : NuxtError.layout\n  if (typeof layout === 'function') {\n    layout = layout(app.context)\n  }\n  await _app.loadLayout(layout)\n  if (ssrContext.nuxt.error) {\n    return renderErrorPage()\n  }\n  layout = _app.setLayout(layout)\n  ssrContext.nuxt.layout = _app.layoutName\n\n  /*\n  ** Call middleware (layout + pages)\n  */\n  midd = []\n\n  layout = sanitizeComponent(layout)\n  if (layout.options.middleware) {\n    midd = midd.concat(layout.options.middleware)\n  }\n\n  Components.forEach((Component) => {\n    if (Component.options.middleware) {\n      midd = midd.concat(Component.options.middleware)\n    }\n  })\n  midd = midd.map((name) => {\n    if (typeof name === 'function') {\n      return name\n    }\n    if (typeof middleware[name] !== 'function') {\n      app.context.error({ statusCode: 500, message: 'Unknown middleware ' + name })\n    }\n    return middleware[name]\n  })\n  await middlewareSeries(midd, app.context)\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) {\n    return noopApp()\n  }\n  if (ssrContext.nuxt.error) {\n    return renderErrorPage()\n  }\n\n  /*\n  ** Call .validate()\n  */\n  let isValid = true\n  try {\n    for (const Component of Components) {\n      if (typeof Component.options.validate !== 'function') {\n        continue\n      }\n\n      isValid = await Component.options.validate(app.context)\n\n      if (!isValid) {\n        break\n      }\n    }\n  } catch (validationError) {\n    // ...If .validate() threw an error\n    app.context.error({\n      statusCode: validationError.statusCode || '500',\n      message: validationError.message\n    })\n    return renderErrorPage()\n  }\n\n  // ...If .validate() returned false\n  if (!isValid) {\n    // Render a 404 error page\n    return render404Page()\n  }\n\n  // If no Components found, returns 404\n  if (!Components.length) {\n    return render404Page()\n  }\n\n  // Call asyncData & fetch hooks on components matched by the route.\n  const asyncDatas = await Promise.all(Components.map((Component) => {\n    const promises = []\n\n    // Call asyncData(context)\n    if (Component.options.asyncData && typeof Component.options.asyncData === 'function') {\n      const promise = promisify(Component.options.asyncData, app.context)\n      promise.then((asyncDataResult) => {\n        ssrContext.asyncData[Component.cid] = asyncDataResult\n        applyAsyncData(Component)\n        return asyncDataResult\n      })\n      promises.push(promise)\n    } else {\n      promises.push(null)\n    }\n\n    // Call fetch(context)\n    if (Component.options.fetch && Component.options.fetch.length) {\n      promises.push(Component.options.fetch(app.context))\n    } else {\n      promises.push(null)\n    }\n\n    return Promise.all(promises)\n  }))\n\n  // datas are the first row of each\n  ssrContext.nuxt.data = asyncDatas.map(r => r[0] || {})\n\n  // ...If there is a redirect or an error, stop the process\n  if (ssrContext.redirected) {\n    return noopApp()\n  }\n  if (ssrContext.nuxt.error) {\n    return renderErrorPage()\n  }\n\n  // Call beforeNuxtRender methods & add store state\n  await beforeRender()\n\n  return _app\n}\n"],"mappingsnjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzCA;;;;;;ACAA;;;;;;ACAA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACvBA;;;;;;ACEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AApBA;AAqxvRA;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtzXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5CA;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACptcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvrCA;AAAA;AAAA;AAAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AAAA;AAAA;AAAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AAAA;AAAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACbqllaqBAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA,iBAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AClnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAhCA;;;;;;;;;;;;;;;;;;;;;;AChCA;AACA;AACA,aAgBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA,qIAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AAbA;AAgBA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AANA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,iBAYA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAtFA;AAwFA;AAmBA;;AC5GA;AACA;AACA;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAPA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAHA;AASA;AACA;AA3BA;;ACrBA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAVA;AACA;AAczGA;AACA;AAyGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAWA;AACA;AAAA;AACA;AACA;AAvJA;;ACDA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAOA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AALA;AAeA;AACA;AACA;AADA;AADA;AASA;AACA;AACA;AACA;AAEA;AACA;AAEA;AANA;AACA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA,iBAQA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA,mBASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AA/FA;AAiGA;AACA;AADA;AAxLA;;ACXA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAWA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AARA;AAUA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAxBA;AAyBA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAKA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AARA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhFA;AAjCA;AAmHA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAMA;AAKA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AA7rBA;AACA;AA8rBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AACA;AAgBA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;;AC1jCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA,iBAIA;AACA;AAAA;AACA;AACA;AAVA;AACA;AAYA;AACA;AAIA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA,ivCA;AAwCA;AA7CA;AACA;AAgDA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;AAWA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAKA;AACA;AACA;AACA,eAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAIA;AACA;AACA;AACA;AACA;AACA,iBAKA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;ACtQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAHA;;ACFA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;A","sourceRoot":""}